{"ast":null,"code":"import shortId from 'shortid';\nimport faker from 'faker';\nimport produce from '../util/produce';\nexport var initialState = {\n  mainActions: [{\n    id: 1,\n    title: 'a',\n    description: 'b',\n    score: 1,\n    User: {\n      id: 1,\n      nickname: 'Sean'\n    }\n  }, {\n    id: 2,\n    title: 'c',\n    description: 'd',\n    score: 1,\n    User: {\n      id: 1,\n      nickname: 'Sean'\n    }\n  }, {\n    id: 3,\n    title: 'e',\n    description: 'f',\n    score: 1,\n    User: {\n      id: 1,\n      nickname: 'Sean'\n    }\n  }],\n  loadActionsLoading: false,\n  loadActionsDone: false,\n  loadActionsError: null,\n  addActionLoading: false,\n  addActionDone: false,\n  addActionError: null,\n  removeActionLoading: false,\n  removeActionDone: false,\n  removeActionError: null,\n  addScoresDone: false,\n  addScoresError: null,\n  removeScoresLoading: false,\n  removeScoresDone: false,\n  removeScoresError: null\n};\nexport var LOAD_ACTIONS_REQUEST = 'LOAD_ACTIONS_REQUEST';\nexport var LOAD_ACTIONS_SUCCESS = 'LOAD_ACTIONS_SUCCESS';\nexport var LOAD_ACTIONS_FAILURE = 'LOAD_ACTIONS_FAILURE';\nexport var ADD_ACTION_REQUEST = 'ADD_ACTION_REQUEST';\nexport var ADD_ACTION_SUCCESS = 'ADD_ACTION_SUCCESS';\nexport var ADD_ACTION_FAILURE = 'ADD_ACTION_FAILURE';\nexport var REMOVE_ACTION_REQUEST = 'REMOVE_ACTION_REQUEST';\nexport var REMOVE_ACTION_SUCCESS = 'REMOVE_ACTION_SUCCESS';\nexport var REMOVE_ACTION_FAILURE = 'REMOVE_ACTION_FAILURE';\nexport var ADD_SCORES_REQUEST = 'ADD_SCORES_REQUEST';\nexport var ADD_SCORES_SUCCESS = 'ADD_SCORES_SUCCESS';\nexport var ADD_SCORES_FAILURE = 'ADD_SCORES_FAILURE';\nexport var REMOVE_SCORES_REQUEST = 'REMOVE_SCORES_REQUEST';\nexport var REMOVE_SCORES_SUCCESS = 'REMOVE_SCORES_SUCCESS';\nexport var REMOVE_SCORES_FAILURE = 'REMOVE_SCORES_FAILURE';\nexport var generateDummyAction = function generateDummyAction(number) {\n  return Array(number).fill().map(function () {\n    return {\n      id: shortId.generate(),\n      User: {\n        id: shortId.generate(),\n        nickname: faker.name.findName()\n      },\n      title: faker.lorem.word(),\n      description: faker.lorem.sentences(),\n      score: faker.random.number()\n    };\n  });\n};\n\nvar dummyAction = function dummyAction(data) {\n  return {\n    id: data.id,\n    title: data.title,\n    description: data.description,\n    score: data.score,\n    User: {\n      id: 1,\n      nickname: 'Sean'\n    }\n  };\n};\n\nvar reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  return produce(state, function (draft) {\n    switch (action.type) {\n      case LOAD_ACTIONS_REQUEST:\n        draft.loadActionsLoading = true;\n        draft.loadActionsError = null;\n        draft.loadActionsDone = false;\n        break;\n\n      case LOAD_ACTIONS_SUCCESS:\n        draft.loadActionsLoading = false;\n        draft.loadActionsDone = true;\n        draft.mainActions = action.data.concat(draft.mainActions);\n        draft.hasMoreActions = draft.mainActions.length < 50;\n        break;\n\n      case LOAD_ACTIONS_FAILURE:\n        draft.loadActionsLoading = false;\n        draft.loadActionsError = action.error;\n        break;\n\n      case ADD_ACTION_REQUEST:\n        draft.addActionLoading = true;\n        draft.addActionError = null;\n        draft.addActionDone = false;\n        break;\n\n      case ADD_ACTION_SUCCESS:\n        draft.addActionLoading = false;\n        draft.addActionDone = true;\n        draft.mainActions.unshift(action.data);\n        break;\n\n      case ADD_ACTION_FAILURE:\n        draft.addActionLoading = false;\n        draft.addActionError = action.error;\n        break;\n\n      case REMOVE_ACTION_REQUEST:\n        draft.removeActionLoading = true;\n        draft.removeActionError = null;\n        draft.removeActionDone = false;\n        break;\n\n      case REMOVE_ACTION_SUCCESS:\n        draft.removeActionLoading = false;\n        draft.removeActionDone = true;\n        draft.mainActions = draft.mainActions.filter(function (v) {\n          return v.id !== action.data;\n        });\n        break;\n\n      case ADD_SCORES_REQUEST:\n        draft.addScoresLoading = true;\n        draft.addScoresError = null;\n        draft.addScoresDone = false;\n        break;\n\n      case ADD_SCORES_SUCCESS:\n        draft.addScoresLoading = false;\n        draft.addScoresDone = true;\n        draft.mainActions.unshift(dummyAction(action.data));\n        break;\n\n      case ADD_SCORES_FAILURE:\n        draft.addScoresLoading = false;\n        draft.addScoresError = action.error;\n        break;\n\n      case REMOVE_SCORES_REQUEST:\n        draft.removeScoresLoading = true;\n        draft.removeScoresError = null;\n        draft.removeScoresDone = false;\n        break;\n\n      case REMOVE_SCORES_SUCCESS:\n        draft.removeScoresLoading = false;\n        draft.removeScoresDone = true;\n        draft.mainActions = draft.mainActions.filter(function (v) {\n          return v.id !== action.data;\n        });\n        break;\n\n      case REMOVE_SCORES_FAILURE:\n        draft.removeScoresLoading = false;\n        draft.removeScoresError = action.error;\n        break;\n\n      default:\n        break;\n    }\n  });\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/sean/Projects/dayscore/front/reducers/action.js"],"names":["shortId","faker","produce","initialState","mainActions","id","title","description","score","User","nickname","loadActionsLoading","loadActionsDone","loadActionsError","addActionLoading","addActionDone","addActionError","removeActionLoading","removeActionDone","removeActionError","addScoresDone","addScoresError","removeScoresLoading","removeScoresDone","removeScoresError","LOAD_ACTIONS_REQUEST","LOAD_ACTIONS_SUCCESS","LOAD_ACTIONS_FAILURE","ADD_ACTION_REQUEST","ADD_ACTION_SUCCESS","ADD_ACTION_FAILURE","REMOVE_ACTION_REQUEST","REMOVE_ACTION_SUCCESS","REMOVE_ACTION_FAILURE","ADD_SCORES_REQUEST","ADD_SCORES_SUCCESS","ADD_SCORES_FAILURE","REMOVE_SCORES_REQUEST","REMOVE_SCORES_SUCCESS","REMOVE_SCORES_FAILURE","generateDummyAction","number","Array","fill","map","generate","name","findName","lorem","word","sentences","random","dummyAction","data","reducer","state","action","draft","type","concat","hasMoreActions","length","error","unshift","filter","v","addScoresLoading"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,SAApB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,iBAApB;AAEA,OAAO,IAAMC,YAAY,GAAG;AAC1BC,EAAAA,WAAW,EAAE,CAAC;AACZC,IAAAA,EAAE,EAAE,CADQ;AAEZC,IAAAA,KAAK,EAAE,GAFK;AAGZC,IAAAA,WAAW,EAAE,GAHD;AAIZC,IAAAA,KAAK,EAAE,CAJK;AAKZC,IAAAA,IAAI,EAAE;AACJJ,MAAAA,EAAE,EAAE,CADA;AAEJK,MAAAA,QAAQ,EAAE;AAFN;AALM,GAAD,EASV;AACDL,IAAAA,EAAE,EAAE,CADH;AAEDC,IAAAA,KAAK,EAAE,GAFN;AAGDC,IAAAA,WAAW,EAAE,GAHZ;AAIDC,IAAAA,KAAK,EAAE,CAJN;AAKDC,IAAAA,IAAI,EAAE;AACJJ,MAAAA,EAAE,EAAE,CADA;AAEJK,MAAAA,QAAQ,EAAE;AAFN;AALL,GATU,EAkBV;AACDL,IAAAA,EAAE,EAAE,CADH;AAEDC,IAAAA,KAAK,EAAE,GAFN;AAGDC,IAAAA,WAAW,EAAE,GAHZ;AAIDC,IAAAA,KAAK,EAAE,CAJN;AAKDC,IAAAA,IAAI,EAAE;AACJJ,MAAAA,EAAE,EAAE,CADA;AAEJK,MAAAA,QAAQ,EAAE;AAFN;AALL,GAlBU,CADa;AA6B1BC,EAAAA,kBAAkB,EAAE,KA7BM;AA8B1BC,EAAAA,eAAe,EAAE,KA9BS;AA+B1BC,EAAAA,gBAAgB,EAAE,IA/BQ;AAgC1BC,EAAAA,gBAAgB,EAAE,KAhCQ;AAiC1BC,EAAAA,aAAa,EAAE,KAjCW;AAkC1BC,EAAAA,cAAc,EAAE,IAlCU;AAmC1BC,EAAAA,mBAAmB,EAAE,KAnCK;AAoC1BC,EAAAA,gBAAgB,EAAE,KApCQ;AAqC1BC,EAAAA,iBAAiB,EAAE,IArCO;AAsC1BC,EAAAA,aAAa,EAAE,KAtCW;AAuC1BC,EAAAA,cAAc,EAAE,IAvCU;AAwC1BC,EAAAA,mBAAmB,EAAE,KAxCK;AAyC1BC,EAAAA,gBAAgB,EAAE,KAzCQ;AA0C1BC,EAAAA,iBAAiB,EAAE;AA1CO,CAArB;AA6CP,OAAO,IAAMC,oBAAoB,GAAG,sBAA7B;AACP,OAAO,IAAMC,oBAAoB,GAAG,sBAA7B;AACP,OAAO,IAAMC,oBAAoB,GAAG,sBAA7B;AAEP,OAAO,IAAMC,kBAAkB,GAAG,oBAA3B;AACP,OAAO,IAAMC,kBAAkB,GAAG,oBAA3B;AACP,OAAO,IAAMC,kBAAkB,GAAG,oBAA3B;AAEP,OAAO,IAAMC,qBAAqB,GAAG,uBAA9B;AACP,OAAO,IAAMC,qBAAqB,GAAG,uBAA9B;AACP,OAAO,IAAMC,qBAAqB,GAAG,uBAA9B;AAEP,OAAO,IAAMC,kBAAkB,GAAG,oBAA3B;AACP,OAAO,IAAMC,kBAAkB,GAAG,oBAA3B;AACP,OAAO,IAAMC,kBAAkB,GAAG,oBAA3B;AAEP,OAAO,IAAMC,qBAAqB,GAAG,uBAA9B;AACP,OAAO,IAAMC,qBAAqB,GAAG,uBAA9B;AACP,OAAO,IAAMC,qBAAqB,GAAG,uBAA9B;AAEP,OAAO,IAAMC,mBAAmB,GAAG,SAAtBA,mBAAsB,CAACC,MAAD;AAAA,SAAYC,KAAK,CAACD,MAAD,CAAL,CAAcE,IAAd,GAAqBC,GAArB,CAAyB;AAAA,WAAO;AAC7EvC,MAAAA,EAAE,EAAEL,OAAO,CAAC6C,QAAR,EADyE;AAE7EpC,MAAAA,IAAI,EAAE;AACJJ,QAAAA,EAAE,EAAEL,OAAO,CAAC6C,QAAR,EADA;AAEJnC,QAAAA,QAAQ,EAAET,KAAK,CAAC6C,IAAN,CAAWC,QAAX;AAFN,OAFuE;AAM7EzC,MAAAA,KAAK,EAAEL,KAAK,CAAC+C,KAAN,CAAYC,IAAZ,EANsE;AAO7E1C,MAAAA,WAAW,EAAEN,KAAK,CAAC+C,KAAN,CAAYE,SAAZ,EAPgE;AAQ7E1C,MAAAA,KAAK,EAAEP,KAAK,CAACkD,MAAN,CAAaV,MAAb;AARsE,KAAP;AAAA,GAAzB,CAAZ;AAAA,CAA5B;;AAWP,IAAMW,WAAW,GAAG,SAAdA,WAAc,CAACC,IAAD;AAAA,SAAW;AAC7BhD,IAAAA,EAAE,EAAEgD,IAAI,CAAChD,EADoB;AAE7BC,IAAAA,KAAK,EAAE+C,IAAI,CAAC/C,KAFiB;AAG7BC,IAAAA,WAAW,EAAE8C,IAAI,CAAC9C,WAHW;AAI7BC,IAAAA,KAAK,EAAE6C,IAAI,CAAC7C,KAJiB;AAK7BC,IAAAA,IAAI,EAAE;AACJJ,MAAAA,EAAE,EAAE,CADA;AAEJK,MAAAA,QAAQ,EAAE;AAFN;AALuB,GAAX;AAAA,CAApB;;AAWA,IAAM4C,OAAO,GAAG,SAAVA,OAAU;AAAA,MAACC,KAAD,uEAASpD,YAAT;AAAA,MAAuBqD,MAAvB;AAAA,SAAkCtD,OAAO,CAACqD,KAAD,EAAQ,UAACE,KAAD,EAAW;AAC1E,YAAQD,MAAM,CAACE,IAAf;AACE,WAAKjC,oBAAL;AACEgC,QAAAA,KAAK,CAAC9C,kBAAN,GAA2B,IAA3B;AACA8C,QAAAA,KAAK,CAAC5C,gBAAN,GAAyB,IAAzB;AACA4C,QAAAA,KAAK,CAAC7C,eAAN,GAAwB,KAAxB;AACA;;AACF,WAAKc,oBAAL;AACE+B,QAAAA,KAAK,CAAC9C,kBAAN,GAA2B,KAA3B;AACA8C,QAAAA,KAAK,CAAC7C,eAAN,GAAwB,IAAxB;AACA6C,QAAAA,KAAK,CAACrD,WAAN,GAAoBoD,MAAM,CAACH,IAAP,CAAYM,MAAZ,CAAmBF,KAAK,CAACrD,WAAzB,CAApB;AACAqD,QAAAA,KAAK,CAACG,cAAN,GAAuBH,KAAK,CAACrD,WAAN,CAAkByD,MAAlB,GAA2B,EAAlD;AACA;;AACF,WAAKlC,oBAAL;AACE8B,QAAAA,KAAK,CAAC9C,kBAAN,GAA2B,KAA3B;AACA8C,QAAAA,KAAK,CAAC5C,gBAAN,GAAyB2C,MAAM,CAACM,KAAhC;AACA;;AACF,WAAKlC,kBAAL;AACE6B,QAAAA,KAAK,CAAC3C,gBAAN,GAAyB,IAAzB;AACA2C,QAAAA,KAAK,CAACzC,cAAN,GAAuB,IAAvB;AACAyC,QAAAA,KAAK,CAAC1C,aAAN,GAAsB,KAAtB;AACA;;AACF,WAAKc,kBAAL;AACE4B,QAAAA,KAAK,CAAC3C,gBAAN,GAAyB,KAAzB;AACA2C,QAAAA,KAAK,CAAC1C,aAAN,GAAsB,IAAtB;AACA0C,QAAAA,KAAK,CAACrD,WAAN,CAAkB2D,OAAlB,CAA0BP,MAAM,CAACH,IAAjC;AACA;;AACF,WAAKvB,kBAAL;AACE2B,QAAAA,KAAK,CAAC3C,gBAAN,GAAyB,KAAzB;AACA2C,QAAAA,KAAK,CAACzC,cAAN,GAAuBwC,MAAM,CAACM,KAA9B;AACA;;AACF,WAAK/B,qBAAL;AACE0B,QAAAA,KAAK,CAACxC,mBAAN,GAA4B,IAA5B;AACAwC,QAAAA,KAAK,CAACtC,iBAAN,GAA0B,IAA1B;AACAsC,QAAAA,KAAK,CAACvC,gBAAN,GAAyB,KAAzB;AACA;;AACF,WAAKc,qBAAL;AACEyB,QAAAA,KAAK,CAACxC,mBAAN,GAA4B,KAA5B;AACAwC,QAAAA,KAAK,CAACvC,gBAAN,GAAyB,IAAzB;AACAuC,QAAAA,KAAK,CAACrD,WAAN,GAAoBqD,KAAK,CAACrD,WAAN,CAAkB4D,MAAlB,CAAyB,UAACC,CAAD;AAAA,iBAAOA,CAAC,CAAC5D,EAAF,KAASmD,MAAM,CAACH,IAAvB;AAAA,SAAzB,CAApB;AACA;;AACF,WAAKnB,kBAAL;AACEuB,QAAAA,KAAK,CAACS,gBAAN,GAAyB,IAAzB;AACAT,QAAAA,KAAK,CAACpC,cAAN,GAAuB,IAAvB;AACAoC,QAAAA,KAAK,CAACrC,aAAN,GAAsB,KAAtB;AACA;;AACF,WAAKe,kBAAL;AACEsB,QAAAA,KAAK,CAACS,gBAAN,GAAyB,KAAzB;AACAT,QAAAA,KAAK,CAACrC,aAAN,GAAsB,IAAtB;AACAqC,QAAAA,KAAK,CAACrD,WAAN,CAAkB2D,OAAlB,CAA0BX,WAAW,CAACI,MAAM,CAACH,IAAR,CAArC;AACA;;AACF,WAAKjB,kBAAL;AACEqB,QAAAA,KAAK,CAACS,gBAAN,GAAyB,KAAzB;AACAT,QAAAA,KAAK,CAACpC,cAAN,GAAuBmC,MAAM,CAACM,KAA9B;AACA;;AACF,WAAKzB,qBAAL;AACEoB,QAAAA,KAAK,CAACnC,mBAAN,GAA4B,IAA5B;AACAmC,QAAAA,KAAK,CAACjC,iBAAN,GAA0B,IAA1B;AACAiC,QAAAA,KAAK,CAAClC,gBAAN,GAAyB,KAAzB;AACA;;AACF,WAAKe,qBAAL;AACEmB,QAAAA,KAAK,CAACnC,mBAAN,GAA4B,KAA5B;AACAmC,QAAAA,KAAK,CAAClC,gBAAN,GAAyB,IAAzB;AACAkC,QAAAA,KAAK,CAACrD,WAAN,GAAoBqD,KAAK,CAACrD,WAAN,CAAkB4D,MAAlB,CAAyB,UAACC,CAAD;AAAA,iBAAOA,CAAC,CAAC5D,EAAF,KAASmD,MAAM,CAACH,IAAvB;AAAA,SAAzB,CAApB;AACA;;AACF,WAAKd,qBAAL;AACEkB,QAAAA,KAAK,CAACnC,mBAAN,GAA4B,KAA5B;AACAmC,QAAAA,KAAK,CAACjC,iBAAN,GAA0BgC,MAAM,CAACM,KAAjC;AACA;;AACF;AACE;AArEJ;AAuED,GAxEwD,CAAzC;AAAA,CAAhB;;AA0EA,eAAeR,OAAf","sourcesContent":["import shortId from 'shortid';\nimport faker from 'faker';\nimport produce from '../util/produce';\n\nexport const initialState = {\n  mainActions: [{\n    id: 1,\n    title: 'a',\n    description: 'b',\n    score: 1,\n    User: {\n      id: 1,\n      nickname: 'Sean',\n    },\n  }, {\n    id: 2,\n    title: 'c',\n    description: 'd',\n    score: 1,\n    User: {\n      id: 1,\n      nickname: 'Sean',\n    },\n  }, {\n    id: 3,\n    title: 'e',\n    description: 'f',\n    score: 1,\n    User: {\n      id: 1,\n      nickname: 'Sean',\n    },\n  }],\n  loadActionsLoading: false,\n  loadActionsDone: false,\n  loadActionsError: null,\n  addActionLoading: false,\n  addActionDone: false,\n  addActionError: null,\n  removeActionLoading: false,\n  removeActionDone: false,\n  removeActionError: null,\n  addScoresDone: false,\n  addScoresError: null,\n  removeScoresLoading: false,\n  removeScoresDone: false,\n  removeScoresError: null,\n};\n\nexport const LOAD_ACTIONS_REQUEST = 'LOAD_ACTIONS_REQUEST';\nexport const LOAD_ACTIONS_SUCCESS = 'LOAD_ACTIONS_SUCCESS';\nexport const LOAD_ACTIONS_FAILURE = 'LOAD_ACTIONS_FAILURE';\n\nexport const ADD_ACTION_REQUEST = 'ADD_ACTION_REQUEST';\nexport const ADD_ACTION_SUCCESS = 'ADD_ACTION_SUCCESS';\nexport const ADD_ACTION_FAILURE = 'ADD_ACTION_FAILURE';\n\nexport const REMOVE_ACTION_REQUEST = 'REMOVE_ACTION_REQUEST';\nexport const REMOVE_ACTION_SUCCESS = 'REMOVE_ACTION_SUCCESS';\nexport const REMOVE_ACTION_FAILURE = 'REMOVE_ACTION_FAILURE';\n\nexport const ADD_SCORES_REQUEST = 'ADD_SCORES_REQUEST';\nexport const ADD_SCORES_SUCCESS = 'ADD_SCORES_SUCCESS';\nexport const ADD_SCORES_FAILURE = 'ADD_SCORES_FAILURE';\n\nexport const REMOVE_SCORES_REQUEST = 'REMOVE_SCORES_REQUEST';\nexport const REMOVE_SCORES_SUCCESS = 'REMOVE_SCORES_SUCCESS';\nexport const REMOVE_SCORES_FAILURE = 'REMOVE_SCORES_FAILURE';\n\nexport const generateDummyAction = (number) => Array(number).fill().map(() => ({\n  id: shortId.generate(),\n  User: {\n    id: shortId.generate(),\n    nickname: faker.name.findName(),\n  },\n  title: faker.lorem.word(),\n  description: faker.lorem.sentences(),\n  score: faker.random.number(),\n}));\n\nconst dummyAction = (data) => ({\n  id: data.id,\n  title: data.title,\n  description: data.description,\n  score: data.score,\n  User: {\n    id: 1,\n    nickname: 'Sean',\n  },\n});\n\nconst reducer = (state = initialState, action) => produce(state, (draft) => {\n  switch (action.type) {\n    case LOAD_ACTIONS_REQUEST:\n      draft.loadActionsLoading = true;\n      draft.loadActionsError = null;\n      draft.loadActionsDone = false;\n      break;\n    case LOAD_ACTIONS_SUCCESS:\n      draft.loadActionsLoading = false;\n      draft.loadActionsDone = true;\n      draft.mainActions = action.data.concat(draft.mainActions);\n      draft.hasMoreActions = draft.mainActions.length < 50;\n      break;\n    case LOAD_ACTIONS_FAILURE:\n      draft.loadActionsLoading = false;\n      draft.loadActionsError = action.error;\n      break;\n    case ADD_ACTION_REQUEST:\n      draft.addActionLoading = true;\n      draft.addActionError = null;\n      draft.addActionDone = false;\n      break;\n    case ADD_ACTION_SUCCESS:\n      draft.addActionLoading = false;\n      draft.addActionDone = true;\n      draft.mainActions.unshift(action.data);\n      break;\n    case ADD_ACTION_FAILURE:\n      draft.addActionLoading = false;\n      draft.addActionError = action.error;\n      break;\n    case REMOVE_ACTION_REQUEST:\n      draft.removeActionLoading = true;\n      draft.removeActionError = null;\n      draft.removeActionDone = false;\n      break;\n    case REMOVE_ACTION_SUCCESS:\n      draft.removeActionLoading = false;\n      draft.removeActionDone = true;\n      draft.mainActions = draft.mainActions.filter((v) => v.id !== action.data);\n      break;\n    case ADD_SCORES_REQUEST:\n      draft.addScoresLoading = true;\n      draft.addScoresError = null;\n      draft.addScoresDone = false;\n      break;\n    case ADD_SCORES_SUCCESS:\n      draft.addScoresLoading = false;\n      draft.addScoresDone = true;\n      draft.mainActions.unshift(dummyAction(action.data));\n      break;\n    case ADD_SCORES_FAILURE:\n      draft.addScoresLoading = false;\n      draft.addScoresError = action.error;\n      break;\n    case REMOVE_SCORES_REQUEST:\n      draft.removeScoresLoading = true;\n      draft.removeScoresError = null;\n      draft.removeScoresDone = false;\n      break;\n    case REMOVE_SCORES_SUCCESS:\n      draft.removeScoresLoading = false;\n      draft.removeScoresDone = true;\n      draft.mainActions = draft.mainActions.filter((v) => v.id !== action.data);\n      break;\n    case REMOVE_SCORES_FAILURE:\n      draft.removeScoresLoading = false;\n      draft.removeScoresError = action.error;\n      break;\n    default:\n      break;\n  }\n});\n\nexport default reducer;\n"]},"metadata":{},"sourceType":"module"}