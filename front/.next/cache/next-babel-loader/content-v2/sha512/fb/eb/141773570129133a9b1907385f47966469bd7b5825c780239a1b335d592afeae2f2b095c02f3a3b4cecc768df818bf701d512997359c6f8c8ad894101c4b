{"ast":null,"code":"import shortId from 'shortid';\nimport faker from 'faker';\nimport produce from '../util/produce';\nexport const initialState = {\n  mainActions: [{\n    id: 1,\n    title: 'a',\n    description: 'b',\n    score: 1,\n    User: {\n      id: 1,\n      nickname: 'Sean'\n    }\n  }, {\n    id: 2,\n    title: 'c',\n    description: 'd',\n    score: 1,\n    User: {\n      id: 1,\n      nickname: 'Sean'\n    }\n  }, {\n    id: 3,\n    title: 'e',\n    description: 'f',\n    score: 1,\n    User: {\n      id: 1,\n      nickname: 'Sean'\n    }\n  }],\n  loadActionsLoading: false,\n  loadActionsDone: false,\n  loadActionsError: null,\n  addActionLoading: false,\n  addActionDone: false,\n  addActionError: null,\n  removeActionLoading: false,\n  removeActionDone: false,\n  removeActionError: null,\n  addScoresDone: false,\n  addScoresError: null,\n  removeScoresLoading: false,\n  removeScoresDone: false,\n  removeScoresError: null\n};\nexport const LOAD_ACTIONS_REQUEST = 'LOAD_ACTIONS_REQUEST';\nexport const LOAD_ACTIONS_SUCCESS = 'LOAD_ACTIONS_SUCCESS';\nexport const LOAD_ACTIONS_FAILURE = 'LOAD_ACTIONS_FAILURE';\nexport const ADD_ACTION_REQUEST = 'ADD_ACTION_REQUEST';\nexport const ADD_ACTION_SUCCESS = 'ADD_ACTION_SUCCESS';\nexport const ADD_ACTION_FAILURE = 'ADD_ACTION_FAILURE';\nexport const REMOVE_ACTION_REQUEST = 'REMOVE_ACTION_REQUEST';\nexport const REMOVE_ACTION_SUCCESS = 'REMOVE_ACTION_SUCCESS';\nexport const REMOVE_ACTION_FAILURE = 'REMOVE_ACTION_FAILURE';\nexport const generateDummyAction = number => Array(number).fill().map(() => ({\n  id: shortId.generate(),\n  User: {\n    id: shortId.generate(),\n    nickname: faker.name.findName()\n  },\n  title: faker.lorem.word(),\n  description: faker.lorem.sentences(),\n  score: faker.random.number()\n}));\n\nconst dummyAction = data => ({\n  id: data.id,\n  title: data.title,\n  description: data.description,\n  score: data.score,\n  User: {\n    id: 1,\n    nickname: 'Sean'\n  }\n});\n\nconst reducer = (state = initialState, action) => produce(state, draft => {\n  switch (action.type) {\n    case LOAD_ACTIONS_REQUEST:\n      draft.loadActionsLoading = true;\n      draft.loadActionsError = null;\n      draft.loadActionsDone = false;\n      break;\n\n    case LOAD_ACTIONS_SUCCESS:\n      draft.loadActionsLoading = false;\n      draft.loadActionsDone = true;\n      draft.mainActions = action.data.concat(draft.mainActions);\n      draft.hasMoreActions = draft.mainActions.length < 50;\n      break;\n\n    case LOAD_ACTIONS_FAILURE:\n      draft.loadActionsLoading = false;\n      draft.loadActionsError = action.error;\n      break;\n\n    case ADD_ACTION_REQUEST:\n      draft.addActionLoading = true;\n      draft.addActionError = null;\n      draft.addActionDone = false;\n      break;\n\n    case ADD_ACTION_SUCCESS:\n      draft.addActionLoading = false;\n      draft.addActionDone = true;\n      draft.mainActions.unshift(dummyAction(action.data));\n      break;\n\n    case ADD_ACTION_FAILURE:\n      draft.addActionLoading = false;\n      draft.addActionError = action.error;\n      break;\n\n    case REMOVE_ACTION_REQUEST:\n      draft.removeActionLoading = true;\n      draft.removeActionError = null;\n      draft.removeActionDone = false;\n      break;\n\n    case REMOVE_ACTION_SUCCESS:\n      draft.removeActionLoading = false;\n      draft.removeActionDone = true;\n      draft.mainActions = draft.mainActions.filter(v => v.id !== action.data);\n      break;\n\n    default:\n      break;\n  }\n});\n\nexport default reducer;","map":{"version":3,"sources":["/Users/sean/Projects/dayscore/front/reducers/action.js"],"names":["shortId","faker","produce","initialState","mainActions","id","title","description","score","User","nickname","loadActionsLoading","loadActionsDone","loadActionsError","addActionLoading","addActionDone","addActionError","removeActionLoading","removeActionDone","removeActionError","addScoresDone","addScoresError","removeScoresLoading","removeScoresDone","removeScoresError","LOAD_ACTIONS_REQUEST","LOAD_ACTIONS_SUCCESS","LOAD_ACTIONS_FAILURE","ADD_ACTION_REQUEST","ADD_ACTION_SUCCESS","ADD_ACTION_FAILURE","REMOVE_ACTION_REQUEST","REMOVE_ACTION_SUCCESS","REMOVE_ACTION_FAILURE","generateDummyAction","number","Array","fill","map","generate","name","findName","lorem","word","sentences","random","dummyAction","data","reducer","state","action","draft","type","concat","hasMoreActions","length","error","unshift","filter","v"],"mappings":"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","sourcesContent":["import shortId from 'shortid';\nimport faker from 'faker';\nimport produce from '../util/produce';\n\nexport const initialState = {\n  mainActions: [{\n    id: 1,\n    title: 'a',\n    description: 'b',\n    score: 1,\n    User: {\n      id: 1,\n      nickname: 'Sean',\n    },\n  }, {\n    id: 2,\n    title: 'c',\n    description: 'd',\n    score: 1,\n    User: {\n      id: 1,\n      nickname: 'Sean',\n    },\n  }, {\n    id: 3,\n    title: 'e',\n    description: 'f',\n    score: 1,\n    User: {\n      id: 1,\n      nickname: 'Sean',\n    },\n  }],\n  loadActionsLoading: false,\n  loadActionsDone: false,\n  loadActionsError: null,\n  addActionLoading: false,\n  addActionDone: false,\n  addActionError: null,\n  removeActionLoading: false,\n  removeActionDone: false,\n  removeActionError: null,\n  addScoresDone: false,\n  addScoresError: null,\n  removeScoresLoading: false,\n  removeScoresDone: false,\n  removeScoresError: null,\n};\n\nexport const LOAD_ACTIONS_REQUEST = 'LOAD_ACTIONS_REQUEST';\nexport const LOAD_ACTIONS_SUCCESS = 'LOAD_ACTIONS_SUCCESS';\nexport const LOAD_ACTIONS_FAILURE = 'LOAD_ACTIONS_FAILURE';\n\nexport const ADD_ACTION_REQUEST = 'ADD_ACTION_REQUEST';\nexport const ADD_ACTION_SUCCESS = 'ADD_ACTION_SUCCESS';\nexport const ADD_ACTION_FAILURE = 'ADD_ACTION_FAILURE';\n\nexport const REMOVE_ACTION_REQUEST = 'REMOVE_ACTION_REQUEST';\nexport const REMOVE_ACTION_SUCCESS = 'REMOVE_ACTION_SUCCESS';\nexport const REMOVE_ACTION_FAILURE = 'REMOVE_ACTION_FAILURE';\n\nexport const generateDummyAction = (number) => Array(number).fill().map(() => ({\n  id: shortId.generate(),\n  User: {\n    id: shortId.generate(),\n    nickname: faker.name.findName(),\n  },\n  title: faker.lorem.word(),\n  description: faker.lorem.sentences(),\n  score: faker.random.number(),\n}));\n\nconst dummyAction = (data) => ({\n  id: data.id,\n  title: data.title,\n  description: data.description,\n  score: data.score,\n  User: {\n    id: 1,\n    nickname: 'Sean',\n  },\n});\n\nconst reducer = (state = initialState, action) => produce(state, (draft) => {\n  switch (action.type) {\n    case LOAD_ACTIONS_REQUEST:\n      draft.loadActionsLoading = true;\n      draft.loadActionsError = null;\n      draft.loadActionsDone = false;\n      break;\n    case LOAD_ACTIONS_SUCCESS:\n      draft.loadActionsLoading = false;\n      draft.loadActionsDone = true;\n      draft.mainActions = action.data.concat(draft.mainActions);\n      draft.hasMoreActions = draft.mainActions.length < 50;\n      break;\n    case LOAD_ACTIONS_FAILURE:\n      draft.loadActionsLoading = false;\n      draft.loadActionsError = action.error;\n      break;\n    case ADD_ACTION_REQUEST:\n      draft.addActionLoading = true;\n      draft.addActionError = null;\n      draft.addActionDone = false;\n      break;\n    case ADD_ACTION_SUCCESS:\n      draft.addActionLoading = false;\n      draft.addActionDone = true;\n      draft.mainActions.unshift(dummyAction(action.data));\n      break;\n    case ADD_ACTION_FAILURE:\n      draft.addActionLoading = false;\n      draft.addActionError = action.error;\n      break;\n    case REMOVE_ACTION_REQUEST:\n      draft.removeActionLoading = true;\n      draft.removeActionError = null;\n      draft.removeActionDone = false;\n      break;\n    case REMOVE_ACTION_SUCCESS:\n      draft.removeActionLoading = false;\n      draft.removeActionDone = true;\n      draft.mainActions = draft.mainActions.filter((v) => v.id !== action.data);\n      break;\n    default:\n      break;\n  }\n});\n\nexport default reducer;\n"]},"metadata":{},"sourceType":"module"}