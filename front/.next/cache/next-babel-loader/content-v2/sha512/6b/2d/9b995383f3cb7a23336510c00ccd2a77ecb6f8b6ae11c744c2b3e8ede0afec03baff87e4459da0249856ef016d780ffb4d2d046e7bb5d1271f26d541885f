{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _taggedTemplateLiteral from \"/Users/sean/Projects/dayscore/front/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _jsxFileName = \"/Users/sean/Projects/dayscore/front/components/CommentForm.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  position: absolute;\\n  right: 0;\\n  bottom: -35px;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { Form, Button, Input } from 'antd';\nimport styled from 'styled-components';\nimport { ADD_COMMENT_REQUEST } from '../reducers/post';\nimport { useDispatch, useSelector } from \"react-redux\";\nvar ButtonWrapper = styled(Button)(_templateObject());\n_c = ButtonWrapper;\n\nvar CommentForm = function CommentForm(_ref) {\n  _s();\n\n  var post = _ref.post;\n\n  var _useState = useState(''),\n      commentText = _useState[0],\n      setCommentText = _useState[1];\n\n  var id = useSelector(function (state) {\n    var _state$user$me;\n\n    return (_state$user$me = state.user.me) === null || _state$user$me === void 0 ? void 0 : _state$user$me.id;\n  });\n\n  var _useSelector = useSelector(function (state) {\n    return state.post;\n  }),\n      addCommentDone = _useSelector.addCommentDone,\n      addCommentLoading = _useSelector.addCommentLoading;\n\n  var dispatch = useDispatch();\n  useEffect(function () {\n    if (addCommentDone) {\n      setCommentText('');\n    }\n  }, [addCommentDone]);\n  var onChangeCommentText = useCallback(function (e) {\n    setCommentText(e.target.value);\n  }, []);\n  var onSubmit = useCallback(function () {\n    console.log(commentText);\n  }, [commentText]);\n  return /*#__PURE__*/_jsxDEV(Form, {\n    onFinish: onSubmit,\n    children: /*#__PURE__*/_jsxDEV(Form.Item, {\n      style: {\n        marginTop: 5\n      },\n      children: [/*#__PURE__*/_jsxDEV(Input.TextArea, {\n        rows: 4,\n        value: commentText,\n        onChange: onChangeCommentText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(ButtonWrapper, {\n        type: \"primary\",\n        htmlType: \"submit\",\n        children: \"\\uC791\\uC131\\uD558\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(CommentForm, \"eV+v/f5vlyTAtdTn68X9ogBvEtI=\", false, function () {\n  return [useSelector, useSelector, useDispatch];\n});\n\n_c2 = CommentForm;\nexport default CommentForm;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ButtonWrapper\");\n$RefreshReg$(_c2, \"CommentForm\");","map":{"version":3,"sources":["/Users/sean/Projects/dayscore/front/components/CommentForm.js"],"names":["React","useCallback","useEffect","useState","Form","Button","Input","styled","ADD_COMMENT_REQUEST","useDispatch","useSelector","ButtonWrapper","CommentForm","post","commentText","setCommentText","id","state","user","me","addCommentDone","addCommentLoading","dispatch","onChangeCommentText","e","target","value","onSubmit","console","log","marginTop"],"mappings":";;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAeC,WAAf,EAA4BC,SAA5B,EAAuCC,QAAvC,QAAsD,OAAtD;AACA,SAASC,IAAT,EAAeC,MAAf,EAAuBC,KAAvB,QAAoC,MAApC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,mBAAT,QAAoC,kBAApC;AACA,SAAQC,WAAR,EAAqBC,WAArB,QAAuC,aAAvC;AAEA,IAAMC,aAAa,GAAGJ,MAAM,CAACF,MAAD,CAAT,mBAAnB;KAAMM,a;;AAMN,IAAMC,WAAW,GAAG,SAAdA,WAAc,OAAc;AAAA;;AAAA,MAAXC,IAAW,QAAXA,IAAW;;AAAA,kBACQV,QAAQ,CAAC,EAAD,CADhB;AAAA,MACvBW,WADuB;AAAA,MACVC,cADU;;AAE9B,MAAMC,EAAE,GAAGN,WAAW,CAAC,UAACO,KAAD;AAAA;;AAAA,6BAAWA,KAAK,CAACC,IAAN,CAAWC,EAAtB,mDAAW,eAAeH,EAA1B;AAAA,GAAD,CAAtB;;AAF8B,qBAGgBN,WAAW,CAAC,UAACO,KAAD;AAAA,WAAWA,KAAK,CAACJ,IAAjB;AAAA,GAAD,CAH3B;AAAA,MAGtBO,cAHsB,gBAGtBA,cAHsB;AAAA,MAGNC,iBAHM,gBAGNA,iBAHM;;AAI9B,MAAMC,QAAQ,GAAGb,WAAW,EAA5B;AAEAP,EAAAA,SAAS,CAAC,YAAM;AACZ,QAAIkB,cAAJ,EAAoB;AAChBL,MAAAA,cAAc,CAAC,EAAD,CAAd;AACH;AACJ,GAJQ,EAIN,CAACK,cAAD,CAJM,CAAT;AAMA,MAAMG,mBAAmB,GAAGtB,WAAW,CAAC,UAACuB,CAAD,EAAO;AAC3CT,IAAAA,cAAc,CAACS,CAAC,CAACC,MAAF,CAASC,KAAV,CAAd;AACH,GAFsC,EAEpC,EAFoC,CAAvC;AAIA,MAAMC,QAAQ,GAAG1B,WAAW,CAAC,YAAM;AAC/B2B,IAAAA,OAAO,CAACC,GAAR,CAAYf,WAAZ;AACH,GAF2B,EAEzB,CAACA,WAAD,CAFyB,CAA5B;AAIA,sBACI,QAAC,IAAD;AAAM,IAAA,QAAQ,EAAEa,QAAhB;AAAA,2BACI,QAAC,IAAD,CAAM,IAAN;AAAW,MAAA,KAAK,EAAE;AAAEG,QAAAA,SAAS,EAAE;AAAb,OAAlB;AAAA,8BACI,QAAC,KAAD,CAAO,QAAP;AAAgB,QAAA,IAAI,EAAE,CAAtB;AAAyB,QAAA,KAAK,EAAEhB,WAAhC;AAA6C,QAAA,QAAQ,EAAES;AAAvD;AAAA;AAAA;AAAA;AAAA,eADJ,eAEI,QAAC,aAAD;AAAe,QAAA,IAAI,EAAC,SAApB;AAA8B,QAAA,QAAQ,EAAC,QAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,WADJ;AAQH,CA5BD;;GAAMX,W;UAESF,W,EACmCA,W,EAC7BD,W;;;MAJfG,W;AA8BN,eAAeA,WAAf","sourcesContent":["import React, {useCallback, useEffect, useState} from 'react';\nimport { Form, Button, Input } from 'antd';\nimport styled from 'styled-components';\nimport { ADD_COMMENT_REQUEST } from '../reducers/post';\nimport {useDispatch, useSelector} from \"react-redux\";\n\nconst ButtonWrapper = styled(Button)`\n  position: absolute;\n  right: 0;\n  bottom: -35px;\n`;\n\nconst CommentForm = ({ post }) => {\n    const [commentText, setCommentText] = useState('');\n    const id = useSelector((state) => state.user.me?.id);\n    const { addCommentDone, addCommentLoading } = useSelector((state) => state.post);\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        if (addCommentDone) {\n            setCommentText('');\n        }\n    }, [addCommentDone]);\n\n    const onChangeCommentText = useCallback((e) => {\n        setCommentText(e.target.value);\n    }, []);\n\n    const onSubmit = useCallback(() => {\n        console.log(commentText);\n    }, [commentText]);\n\n    return (\n        <Form onFinish={onSubmit}>\n            <Form.Item style={{ marginTop: 5 }}>\n                <Input.TextArea rows={4} value={commentText} onChange={onChangeCommentText} />\n                <ButtonWrapper type=\"primary\" htmlType=\"submit\">작성하기</ButtonWrapper>\n            </Form.Item>\n        </Form>\n    )\n}\n\nexport default CommentForm;"]},"metadata":{},"sourceType":"module"}