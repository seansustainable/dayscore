{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/sean/Projects/dayscore/front/components/PostForm.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useEffect, useMemo, useRef, useState } from 'react';\nimport { Form, Input, Button } from 'antd';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { ADD_POST_REQUEST } from '../reducers/post';\n\nvar PostForm = function PostForm() {\n  _s();\n\n  var _useState = useState(''),\n      text = _useState[0],\n      setText = _useState[1];\n\n  var dispatch = useDispatch();\n  var imageInput = useRef();\n\n  var _useSelector = useSelector(function (state) {\n    return state.post;\n  }),\n      imagePaths = _useSelector.imagePaths,\n      addPostLoading = _useSelector.addPostLoading,\n      addPostDone = _useSelector.addPostDone;\n\n  useEffect(function () {\n    if (addPostDone) {\n      setText('');\n    }\n  }, [addPostDone]);\n  var styleForm = useMemo(function () {\n    return {\n      margin: 20\n    };\n  }, []);\n  var onChangeText = useCallback(function (e) {\n    setText(e.target.value);\n  }, []);\n  var onClickImageUpload = useCallback(function () {\n    imageInput.current.click();\n  }, [imageInput.current]);\n  var onSubmit = useCallback(function () {\n    dispatch({\n      type: ADD_POST_REQUEST,\n      data: {\n        text: text\n      }\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Form, {\n    style: styleForm,\n    encType: \"multipart/form-data\",\n    onFinish: onSubmit,\n    children: [/*#__PURE__*/_jsxDEV(Input.TextArea, {\n      value: text,\n      onChange: onChangeText,\n      maxLength: 140,\n      placeholder: \"\\uC5B4\\uB5A4 \\uC77C\\uC774 \\uC788\\uC5C8\\uB098\\uC694?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        multiple: true,\n        hidden: true,\n        ref: imageInput\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: onClickImageUpload,\n        style: {\n          marginTop: 3\n        },\n        children: \"\\uC774\\uBBF8\\uC9C0 \\uC5C5\\uB85C\\uB4DC\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        style: {\n          \"float\": 'right',\n          marginTop: 3\n        },\n        htmlType: \"submit\",\n        loading: addPostLoading,\n        children: \"\\uC791\\uC131\\uD558\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: imagePaths.map(function (v) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'inline-block'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: 'http://localhost:3065/' + v,\n            style: {\n              width: '200px'\n            },\n            alt: v\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 29\n          }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              children: \"\\uC0AD\\uC81C\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 33\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 29\n          }, _this)]\n        }, v, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 25\n        }, _this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(PostForm, \"kwIxc0O4qYBAa0aKNVNqLtIJCn8=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = PostForm;\nexport default PostForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostForm\");","map":{"version":3,"sources":["/Users/sean/Projects/dayscore/front/components/PostForm.js"],"names":["React","useCallback","useEffect","useMemo","useRef","useState","Form","Input","Button","useDispatch","useSelector","ADD_POST_REQUEST","PostForm","text","setText","dispatch","imageInput","state","post","imagePaths","addPostLoading","addPostDone","styleForm","margin","onChangeText","e","target","value","onClickImageUpload","current","click","onSubmit","type","data","marginTop","map","v","display","width"],"mappings":"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","sourcesContent":["import React, {useCallback, useEffect, useMemo, useRef, useState} from 'react';\nimport { Form, Input, Button } from 'antd';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { ADD_POST_REQUEST } from '../reducers/post';\n\nconst PostForm = () => {\n    const [text, setText] = useState('');\n    const dispatch = useDispatch();\n    const imageInput = useRef();\n    const { imagePaths, addPostLoading, addPostDone } = useSelector(state => state.post);\n\n    useEffect(() => {\n        if (addPostDone) {\n            setText('');\n        }\n    }, [addPostDone]);\n\n    const styleForm = useMemo(() => ({ margin: 20 }), []);\n\n    const onChangeText = useCallback((e) => {\n        setText(e.target.value);\n    }, []);\n\n    const onClickImageUpload = useCallback(() => {\n        imageInput.current.click();\n    }, [imageInput.current]);\n\n    const onSubmit = useCallback(() => {\n        dispatch({\n            type: ADD_POST_REQUEST,\n            data: {\n                text,\n            },\n        });\n    }, []);\n\n    return (\n        <Form style={styleForm} encType=\"multipart/form-data\" onFinish={onSubmit}>\n            <Input.TextArea value={text} onChange={onChangeText} maxLength={140} placeholder=\"어떤 일이 있었나요?\" />\n            <div>\n                <input type=\"file\" multiple hidden ref={imageInput} />\n                <Button onClick={onClickImageUpload} style={{ marginTop: 3 }}>이미지 업로드</Button>\n                <Button type=\"primary\" style={{ float: 'right', marginTop: 3 }} htmlType=\"submit\" loading={addPostLoading}>작성하기</Button>\n            </div>\n            <div>\n                {imagePaths.map((v) => {\n                    return (\n                        <div key={v} style={{ display: 'inline-block' }}>\n                            <img src={'http://localhost:3065/' + v} style={{ width: '200px' }} alt={v} />\n                            <div>\n                                <Button>삭제</Button>\n                            </div>\n                        </div>\n                    )\n                })}\n            </div>\n        </Form>\n    );\n}\n\nexport default PostForm;"]},"metadata":{},"sourceType":"module"}