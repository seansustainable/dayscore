{"ast":null,"code":"import shortId from 'shortid';\nimport faker from 'faker';\nimport produce from '../util/produce';\nexport const initialState = {\n  mainActions: [{\n    id: 1,\n    title: a,\n    description: b,\n    score: 1,\n    User: {\n      id: 1,\n      nickname: 'Sean'\n    }\n  }],\n  loadActionsLoading: false,\n  loadActionsDone: false,\n  loadActionsError: null,\n  addActionLoading: false,\n  addActionDone: false,\n  addActionError: null,\n  removeActionLoading: false,\n  removeActionDone: false,\n  removeActionError: null\n};\nexport const LOAD_ACTIONS_REQUEST = 'LOAD_ACTIONS_REQUEST';\nexport const LOAD_ACTIONS_SUCCESS = 'LOAD_ACTIONS_SUCCESS';\nexport const LOAD_ACTIONS_FAILURE = 'LOAD_ACTIONS_FAILURE';\nexport const ADD_ACTION_REQUEST = 'ADD_ACTION_REQUEST';\nexport const ADD_ACTION_SUCCESS = 'ADD_ACTION_SUCCESS';\nexport const ADD_ACTION_FAILURE = 'ADD_ACTION_FAILURE';\nexport const REMOVE_ACTION_REQUEST = 'REMOVE_ACTION_REQUEST';\nexport const REMOVE_ACTION_SUCCESS = 'REMOVE_ACTION_SUCCESS';\nexport const REMOVE_ACTION_FAILURE = 'REMOVE_ACTION_FAILURE';\nexport const generateDummyAction = number => Array(number).fill().map(() => ({\n  id: shortId.generate(),\n  User: {\n    id: shortId.generate(),\n    nickname: faker.name.findName()\n  },\n  title: faker.lorem.word(),\n  description: faker.lorem.sentences(),\n  score: faker.random.number()\n}));\n\nconst dummyAction = data => ({\n  id: data.id,\n  title: data.title,\n  description: data.description,\n  score: data.score,\n  User: {\n    id: 1,\n    nickname: 'Sean'\n  }\n});\n\nconst reducer = (state = initialState, action) => produce(state, draft => {\n  switch (action.type) {\n    case LOAD_ACTIONS_REQUEST:\n      draft.loadActionsLoading = true;\n      draft.loadActionsError = null;\n      draft.loadActionsDone = false;\n      break;\n\n    case LOAD_ACTIONS_SUCCESS:\n      draft.loadActionsLoading = false;\n      draft.loadActionsDone = true;\n      draft.mainActions = action.data.concat(draft.mainActions);\n      draft.hasMoreActions = draft.mainActions.length < 50;\n      break;\n\n    case LOAD_ACTIONS_FAILURE:\n      draft.loadActionsLoading = false;\n      draft.loadActionsError = action.error;\n      break;\n\n    case ADD_ACTION_REQUEST:\n      draft.addActionLoading = true;\n      draft.addActionError = null;\n      draft.addActionDone = false;\n      break;\n\n    case ADD_ACTION_SUCCESS:\n      draft.addActionLoading = false;\n      draft.addActionDone = true;\n      draft.mainActions.unshift(dummyAction(action.data));\n      break;\n\n    case ADD_ACTION_FAILURE:\n      draft.addActionLoading = false;\n      draft.addActionError = action.error;\n      break;\n\n    case REMOVE_ACTION_REQUEST:\n      draft.removeActionLoading = true;\n      draft.removeActionError = null;\n      draft.removeActionDone = false;\n      break;\n\n    case REMOVE_ACTION_SUCCESS:\n      draft.removeActionLoading = false;\n      draft.removeActionDone = true;\n      draft.mainActions = draft.mainActions.filter(v => v.id !== action.data);\n      break;\n\n    case REMOVE_ACTION_FAILURE:\n      draft.removeActionLoading = false;\n      draft.removeActionError = action.error;\n      break;\n\n    default:\n      break;\n  }\n});\n\nexport default reducer;","map":{"version":3,"sources":["/Users/sean/Projects/dayscore/front/reducers/action.js"],"names":["shortId","faker","produce","initialState","mainActions","id","title","a","description","b","score","User","nickname","loadActionsLoading","loadActionsDone","loadActionsError","addActionLoading","addActionDone","addActionError","removeActionLoading","removeActionDone","removeActionError","LOAD_ACTIONS_REQUEST","LOAD_ACTIONS_SUCCESS","LOAD_ACTIONS_FAILURE","ADD_ACTION_REQUEST","ADD_ACTION_SUCCESS","ADD_ACTION_FAILURE","REMOVE_ACTION_REQUEST","REMOVE_ACTION_SUCCESS","REMOVE_ACTION_FAILURE","generateDummyAction","number","Array","fill","map","generate","name","findName","lorem","word","sentences","random","dummyAction","data","reducer","state","action","draft","type","concat","hasMoreActions","length","error","unshift","filter","v"],"mappings":"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","sourcesContent":["import shortId from 'shortid';\nimport faker from 'faker';\nimport produce from '../util/produce';\n\nexport const initialState = {\n  mainActions: [{\n    id: 1,\n    title: a,\n    description: b,\n    score: 1,\n    User: {\n      id: 1,\n      nickname: 'Sean',\n    },\n  }],\n  loadActionsLoading: false,\n  loadActionsDone: false,\n  loadActionsError: null,\n  addActionLoading: false,\n  addActionDone: false,\n  addActionError: null,\n  removeActionLoading: false,\n  removeActionDone: false,\n  removeActionError: null,\n};\n\nexport const LOAD_ACTIONS_REQUEST = 'LOAD_ACTIONS_REQUEST';\nexport const LOAD_ACTIONS_SUCCESS = 'LOAD_ACTIONS_SUCCESS';\nexport const LOAD_ACTIONS_FAILURE = 'LOAD_ACTIONS_FAILURE';\n\nexport const ADD_ACTION_REQUEST = 'ADD_ACTION_REQUEST';\nexport const ADD_ACTION_SUCCESS = 'ADD_ACTION_SUCCESS';\nexport const ADD_ACTION_FAILURE = 'ADD_ACTION_FAILURE';\n\nexport const REMOVE_ACTION_REQUEST = 'REMOVE_ACTION_REQUEST';\nexport const REMOVE_ACTION_SUCCESS = 'REMOVE_ACTION_SUCCESS';\nexport const REMOVE_ACTION_FAILURE = 'REMOVE_ACTION_FAILURE';\n\nexport const generateDummyAction = (number) => Array(number).fill().map(() => ({\n  id: shortId.generate(),\n  User: {\n    id: shortId.generate(),\n    nickname: faker.name.findName(),\n  },\n  title: faker.lorem.word(),\n  description: faker.lorem.sentences(),\n  score: faker.random.number(),\n}));\n\nconst dummyAction = (data) => ({\n  id: data.id,\n  title: data.title,\n  description: data.description,\n  score: data.score,\n  User: {\n    id: 1,\n    nickname: 'Sean',\n  },\n});\n\nconst reducer = (state = initialState, action) => produce(state, (draft) => {\n  switch (action.type) {\n    case LOAD_ACTIONS_REQUEST:\n      draft.loadActionsLoading = true;\n      draft.loadActionsError = null;\n      draft.loadActionsDone = false;\n      break;\n    case LOAD_ACTIONS_SUCCESS:\n      draft.loadActionsLoading = false;\n      draft.loadActionsDone = true;\n      draft.mainActions = action.data.concat(draft.mainActions);\n      draft.hasMoreActions = draft.mainActions.length < 50;\n      break;\n    case LOAD_ACTIONS_FAILURE:\n      draft.loadActionsLoading = false;\n      draft.loadActionsError = action.error;\n      break;\n    case ADD_ACTION_REQUEST:\n      draft.addActionLoading = true;\n      draft.addActionError = null;\n      draft.addActionDone = false;\n      break;\n    case ADD_ACTION_SUCCESS:\n      draft.addActionLoading = false;\n      draft.addActionDone = true;\n      draft.mainActions.unshift(dummyAction(action.data));\n      break;\n    case ADD_ACTION_FAILURE:\n      draft.addActionLoading = false;\n      draft.addActionError = action.error;\n      break;\n    case REMOVE_ACTION_REQUEST:\n      draft.removeActionLoading = true;\n      draft.removeActionError = null;\n      draft.removeActionDone = false;\n      break;\n    case REMOVE_ACTION_SUCCESS:\n      draft.removeActionLoading = false;\n      draft.removeActionDone = true;\n      draft.mainActions = draft.mainActions.filter((v) => v.id !== action.data);\n      break;\n    case REMOVE_ACTION_FAILURE:\n      draft.removeActionLoading = false;\n      draft.removeActionError = action.error;\n      break;\n    default:\n      break;\n  }\n});\n\nexport default reducer;\n"]},"metadata":{},"sourceType":"module"}