{"ast":null,"code":"import _regeneratorRuntime from \"/Users/sean/Projects/dayscore/front/node_modules/@babel/runtime/regenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(loadActions),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(addAction),\n    _marked3 = /*#__PURE__*/_regeneratorRuntime.mark(removeAction),\n    _marked4 = /*#__PURE__*/_regeneratorRuntime.mark(watchLoadActions),\n    _marked5 = /*#__PURE__*/_regeneratorRuntime.mark(watchAddAction),\n    _marked6 = /*#__PURE__*/_regeneratorRuntime.mark(watchRemoveAction),\n    _marked7 = /*#__PURE__*/_regeneratorRuntime.mark(actionSaga);\n\nimport axios from 'axios';\nimport shortId from 'shortid';\nimport { all, delay, fork, put, takeLatest, throttle, call } from 'redux-saga/effects';\nimport { generateDummyAction, LOAD_ACTIONS_FAILURE, LOAD_ACTIONS_REQUEST, LOAD_ACTIONS_SUCCESS, ADD_ACTION_FAILURE, ADD_ACTION_REQUEST, ADD_ACTION_SUCCESS, REMOVE_ACTION_FAILURE, REMOVE_ACTION_REQUEST, REMOVE_ACTION_SUCCESS } from '../reducers/action';\nimport { ADD_ACTION_TO_ME, REMOVE_ACTION_OF_ME } from '../reducers/user';\n\nfunction loadActionsAPI(data) {\n  return axios.get('/api/actions', data);\n}\n\nfunction loadActions(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function loadActions$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return call(loadActionsAPI, action.data);\n\n        case 3:\n          result = _context.sent;\n          _context.next = 6;\n          return put({\n            type: LOAD_ACTIONS_SUCCESS,\n            data: result.data\n          });\n\n        case 6:\n          _context.next = 13;\n          break;\n\n        case 8:\n          _context.prev = 8;\n          _context.t0 = _context[\"catch\"](0);\n          console.error(_context.t0);\n          _context.next = 13;\n          return put({\n            type: LOAD_ACTIONS_FAILURE,\n            error: _context.t0.response.data\n          });\n\n        case 13:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[0, 8]]);\n}\n\nfunction addActionAPI(data) {\n  return axios.post('/api/action', data);\n}\n\nfunction addAction(action) {\n  var id;\n  return _regeneratorRuntime.wrap(function addAction$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.prev = 0;\n          _context2.next = 3;\n          return delay(1000);\n\n        case 3:\n          id = shortId.generate();\n          _context2.next = 6;\n          return put({\n            type: ADD_ACTION_SUCCESS,\n            data: {\n              id: id,\n              title: action.title,\n              description: action.description,\n              score: action.score\n            }\n          });\n\n        case 6:\n          _context2.next = 8;\n          return put({\n            type: ADD_ACTION_TO_ME,\n            data: id\n          });\n\n        case 8:\n          _context2.next = 15;\n          break;\n\n        case 10:\n          _context2.prev = 10;\n          _context2.t0 = _context2[\"catch\"](0);\n          console.error(_context2.t0);\n          _context2.next = 15;\n          return put({\n            type: ADD_ACTION_FAILURE,\n            data: _context2.t0.response.data\n          });\n\n        case 15:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2, null, [[0, 10]]);\n}\n\nfunction removeActionAPI(data) {\n  return axios[\"delete\"]('/api/action', data);\n}\n\nfunction removeAction(action) {\n  return _regeneratorRuntime.wrap(function removeAction$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.prev = 0;\n          _context3.next = 3;\n          return delay(1000);\n\n        case 3:\n          _context3.next = 5;\n          return put({\n            type: REMOVE_ACTION_SUCCESS,\n            data: action.data\n          });\n\n        case 5:\n          _context3.next = 7;\n          return put({\n            type: REMOVE_ACTION_OF_ME,\n            data: action.data\n          });\n\n        case 7:\n          _context3.next = 14;\n          break;\n\n        case 9:\n          _context3.prev = 9;\n          _context3.t0 = _context3[\"catch\"](0);\n          console.error(_context3.t0);\n          _context3.next = 14;\n          return put({\n            type: REMOVE_ACTION_FAILURE,\n            data: _context3.t0.response.data\n          });\n\n        case 14:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3, null, [[0, 9]]);\n}\n\nfunction watchLoadActions() {\n  return _regeneratorRuntime.wrap(function watchLoadActions$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.next = 2;\n          return throttle(5000, LOAD_ACTIONS_REQUEST, loadActions);\n\n        case 2:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _marked4);\n}\n\nfunction watchAddAction() {\n  return _regeneratorRuntime.wrap(function watchAddAction$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          _context5.next = 2;\n          return takeLatest(ADD_ACTION_REQUEST, addAction);\n\n        case 2:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, _marked5);\n}\n\nfunction watchRemoveAction() {\n  return _regeneratorRuntime.wrap(function watchRemoveAction$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          _context6.next = 2;\n          return takeLatest(REMOVE_ACTION_REQUEST, removeAction);\n\n        case 2:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, _marked6);\n}\n\nexport default function actionSaga() {\n  return _regeneratorRuntime.wrap(function actionSaga$(_context7) {\n    while (1) {\n      switch (_context7.prev = _context7.next) {\n        case 0:\n          _context7.next = 2;\n          return all([fork(watchLoadActions), fork(watchAddAction), fork(watchRemoveAction)]);\n\n        case 2:\n        case \"end\":\n          return _context7.stop();\n      }\n    }\n  }, _marked7);\n}","map":{"version":3,"sources":["/Users/sean/Projects/dayscore/front/sagas/action.js"],"names":["loadActions","addAction","removeAction","watchLoadActions","watchAddAction","watchRemoveAction","actionSaga","axios","shortId","all","delay","fork","put","takeLatest","throttle","call","generateDummyAction","LOAD_ACTIONS_FAILURE","LOAD_ACTIONS_REQUEST","LOAD_ACTIONS_SUCCESS","ADD_ACTION_FAILURE","ADD_ACTION_REQUEST","ADD_ACTION_SUCCESS","REMOVE_ACTION_FAILURE","REMOVE_ACTION_REQUEST","REMOVE_ACTION_SUCCESS","ADD_ACTION_TO_ME","REMOVE_ACTION_OF_ME","loadActionsAPI","data","get","action","result","type","console","error","response","addActionAPI","post","id","generate","title","description","score","removeActionAPI"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport shortId from 'shortid';\nimport { all, delay, fork, put, takeLatest, throttle, call } from 'redux-saga/effects';\nimport {\n  generateDummyAction,\n  LOAD_ACTIONS_FAILURE,\n  LOAD_ACTIONS_REQUEST,\n  LOAD_ACTIONS_SUCCESS,\n  ADD_ACTION_FAILURE,\n  ADD_ACTION_REQUEST,\n  ADD_ACTION_SUCCESS,\n  REMOVE_ACTION_FAILURE,\n  REMOVE_ACTION_REQUEST,\n  REMOVE_ACTION_SUCCESS,\n} from '../reducers/action';\nimport { ADD_ACTION_TO_ME, REMOVE_ACTION_OF_ME } from '../reducers/user';\n\nfunction loadActionsAPI(data) {\n  return axios.get('/api/actions', data);\n}\n\nfunction* loadActions(action) {\n  try {\n    const result = yield call(loadActionsAPI, action.data);\n    // yield delay(1000);\n    yield put({\n      type: LOAD_ACTIONS_SUCCESS,\n      data: result.data,\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: LOAD_ACTIONS_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\n\nfunction addActionAPI(data) {\n  return axios.post('/api/action', data);\n}\n\nfunction* addAction(action) {\n  try {\n    // const result = yield call(addActionAPI, action.data);\n    yield delay(1000);\n    const id = shortId.generate();\n    yield put({\n      type: ADD_ACTION_SUCCESS,\n      data: {\n        id,\n        title: action.title,\n        description: action.description,\n        score: action.score,\n      },\n    });\n    yield put({\n      type: ADD_ACTION_TO_ME,\n      data: id,\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: ADD_ACTION_FAILURE,\n      data: err.response.data,\n    });\n  }\n}\n\nfunction removeActionAPI(data) {\n  return axios.delete('/api/action', data);\n}\n\nfunction* removeAction(action) {\n  try {\n    // const result = yield call(removeActionAPI, action.data);\n    yield delay(1000);\n    yield put({\n      type: REMOVE_ACTION_SUCCESS,\n      data: action.data,\n    });\n    yield put({\n      type: REMOVE_ACTION_OF_ME,\n      data: action.data,\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: REMOVE_ACTION_FAILURE,\n      data: err.response.data,\n    });\n  }\n}\n\nfunction* watchLoadActions() {\n  yield throttle(5000, LOAD_ACTIONS_REQUEST, loadActions);\n}\n\nfunction* watchAddAction() {\n  yield takeLatest(ADD_ACTION_REQUEST, addAction);\n}\n\nfunction* watchRemoveAction() {\n  yield takeLatest(REMOVE_ACTION_REQUEST, removeAction);\n}\n\nexport default function* actionSaga() {\n  yield all([\n    fork(watchLoadActions),\n    fork(watchAddAction),\n    fork(watchRemoveAction),\n  ]);\n}\n"]},"metadata":{},"sourceType":"module"}