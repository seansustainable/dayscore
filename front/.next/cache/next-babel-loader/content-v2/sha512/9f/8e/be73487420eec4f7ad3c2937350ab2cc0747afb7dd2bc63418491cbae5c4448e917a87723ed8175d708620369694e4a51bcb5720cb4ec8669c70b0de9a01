{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/sean/Projects/dayscore/front/pages/action.js\";\nimport React, { useEffect, useState } from 'react';\nimport Head from 'next/head';\nimport AppLayout from \"../components/AppLayout\";\nimport { List, Avatar, Button, Skeleton } from 'antd';\nimport reqwest from 'reqwest';\nconst count = 3;\nconst fakeDataUrl = `https://randomuser.me/api/?results=${count}&inc=name,gender,email,nat&noinfo`;\n\nconst Action = () => {\n  const {\n    0: initLoading,\n    1: setInitLoading\n  } = useState(true);\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(false);\n  const {\n    0: data,\n    1: setData\n  } = useState([]);\n  const {\n    0: list,\n    1: setList\n  } = useState([]);\n  useEffect(() => {\n    getData(res => {\n      setInitLoading(false);\n      setData(res.results);\n      setList(res.results);\n    });\n  }, []);\n\n  const getData = callback => {\n    reqwest({\n      url: fakeDataUrl,\n      type: 'json',\n      method: 'get',\n      contentType: 'application/json',\n      success: res => {\n        callback(res);\n      }\n    });\n  };\n\n  const onLoadMore = () => {\n    this.setState({\n      loading: true,\n      list: data.concat([...new Array(count)].map(() => ({\n        loading: true,\n        name: {}\n      })))\n    });\n    this.getData(res => {\n      setData([...data, res.results]);\n      setList([...data, res.results]);\n      setLoading(false);\n      const data = data.concat(res.results);\n      this.setState({\n        data,\n        list: data,\n        loading: false\n      }, () => {\n        // Resetting window's offsetTop so as to display react-virtualized demo underfloor.\n        // In real scene, you can using public method of react-virtualized:\n        // https://stackoverflow.com/questions/46700726/how-to-use-public-method-updateposition-of-react-virtualized\n        window.dispatchEvent(new Event('resize'));\n      });\n    });\n  };\n\n  const loadMore = !initLoading && !loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      textAlign: 'center',\n      marginTop: 12,\n      height: 32,\n      lineHeight: '32px'\n    },\n    children: /*#__PURE__*/_jsxDEV(Button, {\n      onClick: this.onLoadMore,\n      children: \"loading more\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 13\n  }, this) : null;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: [/*#__PURE__*/_jsxDEV(\"meta\", {\n        charSet: \"utf-8\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"\\uC561\\uC158\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(AppLayout, {\n      children: /*#__PURE__*/_jsxDEV(List, {\n        className: \"demo-loadmore-list\",\n        loading: initLoading,\n        itemLayout: \"horizontal\",\n        loadMore: loadMore,\n        dataSource: list,\n        renderItem: item => /*#__PURE__*/_jsxDEV(List.Item, {\n          actions: [/*#__PURE__*/_jsxDEV(\"a\", {\n            children: \"edit\"\n          }, \"list-loadmore-edit\", false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 39\n          }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n            children: \"more\"\n          }, \"list-loadmore-more\", false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 77\n          }, this)],\n          children: /*#__PURE__*/_jsxDEV(Skeleton, {\n            avatar: true,\n            title: false,\n            loading: item.loading,\n            active: true,\n            children: [/*#__PURE__*/_jsxDEV(List.Item.Meta, {\n              avatar: /*#__PURE__*/_jsxDEV(Avatar, {\n                src: \"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 41\n              }, this),\n              title: /*#__PURE__*/_jsxDEV(\"a\", {\n                href: \"https://ant.design\",\n                children: item.name.last\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 44\n              }, this),\n              description: \"Ant Design, a design language for background applications, is refined by Ant UED Team\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: \"content\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\nexport default Action;","map":{"version":3,"sources":["/Users/sean/Projects/dayscore/front/pages/action.js"],"names":["React","useEffect","useState","Head","AppLayout","List","Avatar","Button","Skeleton","reqwest","count","fakeDataUrl","Action","initLoading","setInitLoading","loading","setLoading","data","setData","list","setList","getData","res","results","callback","url","type","method","contentType","success","onLoadMore","setState","concat","Array","map","name","window","dispatchEvent","Event","loadMore","textAlign","marginTop","height","lineHeight","item","last"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,SAASC,IAAT,EAAeC,MAAf,EAAuBC,MAAvB,EAA+BC,QAA/B,QAA+C,MAA/C;AAEA,OAAOC,OAAP,MAAoB,SAApB;AAEA,MAAMC,KAAK,GAAG,CAAd;AACA,MAAMC,WAAW,GAAI,sCAAqCD,KAAM,mCAAhE;;AAGA,MAAME,MAAM,GAAG,MAAM;AACjB,QAAM;AAAA,OAACC,WAAD;AAAA,OAAcC;AAAd,MAAgCZ,QAAQ,CAAC,IAAD,CAA9C;AACA,QAAM;AAAA,OAACa,OAAD;AAAA,OAAUC;AAAV,MAAwBd,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM;AAAA,OAACe,IAAD;AAAA,OAAOC;AAAP,MAAkBhB,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM;AAAA,OAACiB,IAAD;AAAA,OAAOC;AAAP,MAAkBlB,QAAQ,CAAC,EAAD,CAAhC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZoB,IAAAA,OAAO,CAACC,GAAG,IAAI;AACXR,MAAAA,cAAc,CAAC,KAAD,CAAd;AACAI,MAAAA,OAAO,CAACI,GAAG,CAACC,OAAL,CAAP;AACAH,MAAAA,OAAO,CAACE,GAAG,CAACC,OAAL,CAAP;AACH,KAJM,CAAP;AAKH,GANQ,EAMN,EANM,CAAT;;AAQA,QAAMF,OAAO,GAAGG,QAAQ,IAAI;AACxBf,IAAAA,OAAO,CAAC;AACJgB,MAAAA,GAAG,EAAEd,WADD;AAEJe,MAAAA,IAAI,EAAE,MAFF;AAGJC,MAAAA,MAAM,EAAE,KAHJ;AAIJC,MAAAA,WAAW,EAAE,kBAJT;AAKJC,MAAAA,OAAO,EAAEP,GAAG,IAAI;AACZE,QAAAA,QAAQ,CAACF,GAAD,CAAR;AACH;AAPG,KAAD,CAAP;AASH,GAVD;;AAYA,QAAMQ,UAAU,GAAG,MAAM;AACrB,SAAKC,QAAL,CAAc;AACVhB,MAAAA,OAAO,EAAE,IADC;AAEVI,MAAAA,IAAI,EAAEF,IAAI,CAACe,MAAL,CAAY,CAAC,GAAG,IAAIC,KAAJ,CAAUvB,KAAV,CAAJ,EAAsBwB,GAAtB,CAA0B,OAAO;AAAEnB,QAAAA,OAAO,EAAE,IAAX;AAAiBoB,QAAAA,IAAI,EAAE;AAAvB,OAAP,CAA1B,CAAZ;AAFI,KAAd;AAIA,SAAKd,OAAL,CAAaC,GAAG,IAAI;AAChBJ,MAAAA,OAAO,CAAC,CAAC,GAAGD,IAAJ,EAAUK,GAAG,CAACC,OAAd,CAAD,CAAP;AACAH,MAAAA,OAAO,CAAC,CAAC,GAAGH,IAAJ,EAAUK,GAAG,CAACC,OAAd,CAAD,CAAP;AACAP,MAAAA,UAAU,CAAC,KAAD,CAAV;AACA,YAAMC,IAAI,GAAGA,IAAI,CAACe,MAAL,CAAYV,GAAG,CAACC,OAAhB,CAAb;AACA,WAAKQ,QAAL,CACI;AACId,QAAAA,IADJ;AAEIE,QAAAA,IAAI,EAAEF,IAFV;AAGIF,QAAAA,OAAO,EAAE;AAHb,OADJ,EAMI,MAAM;AACF;AACA;AACA;AACAqB,QAAAA,MAAM,CAACC,aAAP,CAAqB,IAAIC,KAAJ,CAAU,QAAV,CAArB;AACH,OAXL;AAaH,KAlBD;AAmBH,GAxBD;;AA0BA,QAAMC,QAAQ,GACV,CAAC1B,WAAD,IAAgB,CAACE,OAAjB,gBACI;AACI,IAAA,KAAK,EAAE;AACHyB,MAAAA,SAAS,EAAE,QADR;AAEHC,MAAAA,SAAS,EAAE,EAFR;AAGHC,MAAAA,MAAM,EAAE,EAHL;AAIHC,MAAAA,UAAU,EAAE;AAJT,KADX;AAAA,2BAQI,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAE,KAAKb,UAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AARJ;AAAA;AAAA;AAAA;AAAA,UADJ,GAWI,IAZR;AAcA,sBACI;AAAA,4BACI,QAAC,IAAD;AAAA,8BACI;AAAM,QAAA,OAAO,EAAC;AAAd;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAKI,QAAC,SAAD;AAAA,6BACI,QAAC,IAAD;AACI,QAAA,SAAS,EAAC,oBADd;AAEI,QAAA,OAAO,EAAEjB,WAFb;AAGI,QAAA,UAAU,EAAC,YAHf;AAII,QAAA,QAAQ,EAAE0B,QAJd;AAKI,QAAA,UAAU,EAAEpB,IALhB;AAMI,QAAA,UAAU,EAAEyB,IAAI,iBACZ,QAAC,IAAD,CAAM,IAAN;AACI,UAAA,OAAO,EAAE,cAAC;AAAA;AAAA,aAAO,oBAAP;AAAA;AAAA;AAAA;AAAA,kBAAD,eAAuC;AAAA;AAAA,aAAO,oBAAP;AAAA;AAAA;AAAA;AAAA,kBAAvC,CADb;AAAA,iCAGI,QAAC,QAAD;AAAU,YAAA,MAAM,MAAhB;AAAiB,YAAA,KAAK,EAAE,KAAxB;AAA+B,YAAA,OAAO,EAAEA,IAAI,CAAC7B,OAA7C;AAAsD,YAAA,MAAM,MAA5D;AAAA,oCACI,QAAC,IAAD,CAAM,IAAN,CAAW,IAAX;AACI,cAAA,MAAM,eACF,QAAC,MAAD;AAAQ,gBAAA,GAAG,EAAC;AAAZ;AAAA;AAAA;AAAA;AAAA,sBAFR;AAII,cAAA,KAAK,eAAE;AAAG,gBAAA,IAAI,EAAC,oBAAR;AAAA,0BAA8B6B,IAAI,CAACT,IAAL,CAAUU;AAAxC;AAAA;AAAA;AAAA;AAAA,sBAJX;AAKI,cAAA,WAAW,EAAC;AALhB;AAAA;AAAA;AAAA;AAAA,oBADJ,eAQI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBARJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAHJ;AAAA;AAAA;AAAA;AAAA;AAPR;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YALJ;AAAA,kBADJ;AAiCH,CAnGD;;AAqGA,eAAejC,MAAf","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport Head from 'next/head';\nimport AppLayout from \"../components/AppLayout\";\nimport { List, Avatar, Button, Skeleton } from 'antd';\n\nimport reqwest from 'reqwest';\n\nconst count = 3;\nconst fakeDataUrl = `https://randomuser.me/api/?results=${count}&inc=name,gender,email,nat&noinfo`;\n\n\nconst Action = () => {\n    const [initLoading, setInitLoading] = useState(true);\n    const [loading, setLoading] = useState(false);\n    const [data, setData] = useState([]);\n    const [list, setList] = useState([]);\n\n    useEffect(() => {\n        getData(res => {\n            setInitLoading(false);\n            setData(res.results);\n            setList(res.results);\n        })\n    }, []);\n\n    const getData = callback => {\n        reqwest({\n            url: fakeDataUrl,\n            type: 'json',\n            method: 'get',\n            contentType: 'application/json',\n            success: res => {\n                callback(res);\n            },\n        });\n    };\n\n    const onLoadMore = () => {\n        this.setState({\n            loading: true,\n            list: data.concat([...new Array(count)].map(() => ({ loading: true, name: {} }))),\n        });\n        this.getData(res => {\n            setData([...data, res.results]);\n            setList([...data, res.results]);\n            setLoading(false);\n            const data = data.concat(res.results);\n            this.setState(\n                {\n                    data,\n                    list: data,\n                    loading: false,\n                },\n                () => {\n                    // Resetting window's offsetTop so as to display react-virtualized demo underfloor.\n                    // In real scene, you can using public method of react-virtualized:\n                    // https://stackoverflow.com/questions/46700726/how-to-use-public-method-updateposition-of-react-virtualized\n                    window.dispatchEvent(new Event('resize'));\n                },\n            );\n        });\n    };\n\n    const loadMore =\n        !initLoading && !loading ? (\n            <div\n                style={{\n                    textAlign: 'center',\n                    marginTop: 12,\n                    height: 32,\n                    lineHeight: '32px',\n                }}\n            >\n                <Button onClick={this.onLoadMore}>loading more</Button>\n            </div>\n        ) : null;\n\n    return (\n        <>\n            <Head>\n                <meta charSet=\"utf-8\"/>\n                <title>액션</title>\n            </Head>\n            <AppLayout>\n                <List\n                    className=\"demo-loadmore-list\"\n                    loading={initLoading}\n                    itemLayout=\"horizontal\"\n                    loadMore={loadMore}\n                    dataSource={list}\n                    renderItem={item => (\n                        <List.Item\n                            actions={[<a key=\"list-loadmore-edit\">edit</a>, <a key=\"list-loadmore-more\">more</a>]}\n                        >\n                            <Skeleton avatar title={false} loading={item.loading} active>\n                                <List.Item.Meta\n                                    avatar={\n                                        <Avatar src=\"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\" />\n                                    }\n                                    title={<a href=\"https://ant.design\">{item.name.last}</a>}\n                                    description=\"Ant Design, a design language for background applications, is refined by Ant UED Team\"\n                                />\n                                <div>content</div>\n                            </Skeleton>\n                        </List.Item>\n                    )}\n                />\n            </AppLayout>\n        </>\n    );\n}\n\nexport default Action;"]},"metadata":{},"sourceType":"module"}