{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/sean/Projects/dayscore/front/pages/signup.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport Head from 'next/head';\nimport AppLayout from \"../components/AppLayout\";\nimport { Form, Input, Select, Checkbox, Button } from 'antd';\n\nconst Signup = () => {\n  const [form] = Form.useForm();\n\n  const onFinish = values => {\n    console.log('Received values of form: ', values);\n  };\n\n  const formItemLayout = {\n    labelCol: {\n      xs: {\n        span: 24\n      },\n      sm: {\n        span: 8\n      }\n    },\n    wrapperCol: {\n      xs: {\n        span: 24\n      },\n      sm: {\n        span: 16\n      }\n    }\n  };\n  const tailFormItemLayout = {\n    wrapperCol: {\n      xs: {\n        span: 24,\n        offset: 0\n      },\n      sm: {\n        span: 16,\n        offset: 8\n      }\n    }\n  };\n\n  const prefixSelector = /*#__PURE__*/_jsxDEV(Form.Item, {\n    name: \"prefix\",\n    noStyle: true,\n    children: /*#__PURE__*/_jsxDEV(Select, {\n      style: {\n        width: 70\n      },\n      children: [/*#__PURE__*/_jsxDEV(Option, {\n        value: \"010\",\n        children: \"010\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Option, {\n        value: \"011\",\n        children: \"011\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: [/*#__PURE__*/_jsxDEV(\"meta\", {\n        charSet: \"utf-8\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"\\uD68C\\uC6D0\\uAC00\\uC785\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(AppLayout, {\n      children: /*#__PURE__*/_jsxDEV(Form, _objectSpread(_objectSpread({}, formItemLayout), {}, {\n        form: form,\n        name: \"register\",\n        onFinish: onFinish,\n        scrollToFirstError: true,\n        children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n          name: \"email\",\n          label: \"\\uC774\\uBA54\\uC77C\",\n          rules: [{\n            type: 'email',\n            message: '유효한 이메일이 아닙니다!'\n          }, {\n            required: true,\n            message: '이메일을 입력해주세요!'\n          }],\n          children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          name: \"password\",\n          label: \"\\uBE44\\uBC00\\uBC88\\uD638\",\n          rules: [{\n            required: true,\n            message: '비밀번호를 입력해주세요!'\n          }],\n          hasFeedback: true,\n          children: /*#__PURE__*/_jsxDEV(Input.Password, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          name: \"confirm\",\n          label: \"\\uBE44\\uBC00\\uBC88\\uD638 \\uD655\\uC778\",\n          dependencies: ['password'],\n          hasFeedback: true,\n          rules: [{\n            required: true,\n            message: '비밀번호를 확인해주세요!'\n          }, ({\n            getFieldValue\n          }) => ({\n            validator(_, value) {\n              if (!value || getFieldValue('password') === value) {\n                return Promise.resolve();\n              }\n\n              return Promise.reject(new Error('비밀번호가 서로 일치하지 않습니다!'));\n            }\n\n          })],\n          children: /*#__PURE__*/_jsxDEV(Input.Password, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          name: \"nickname\",\n          label: \"\\uB2C9\\uB124\\uC784\",\n          tooltip: \"\\uB2E4\\uB978 \\uC0AC\\uC6A9\\uC790\\uAC00 \\uC5B4\\uB5BB\\uAC8C \\uBD88\\uB7EC\\uC8FC\\uAE38 \\uC6D0\\uD558\\uB098\\uC694?\",\n          rules: [{\n            required: true,\n            message: '닉네임을 입력해주세요!',\n            whitespace: true\n          }],\n          children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          name: \"phone\",\n          label: \"\\uC5F0\\uB77D\\uCC98\",\n          rules: [{\n            required: true,\n            message: '연락처를 입력해주세요!'\n          }],\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            addonBefore: prefixSelector,\n            style: {\n              width: '100%'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, _objectSpread(_objectSpread({\n          name: \"agreement\",\n          valuePropName: \"checked\",\n          rules: [{\n            validator: (_, value) => value ? Promise.resolve() : Promise.reject(new Error('약관에 동의해주세요!'))\n          }]\n        }, tailFormItemLayout), {}, {\n          children: /*#__PURE__*/_jsxDEV(Checkbox, {\n            children: [\"\\uD574\\uB2F9 \", /*#__PURE__*/_jsxDEV(\"a\", {\n              href: \"\",\n              children: \"\\uC57D\\uAD00\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 32\n            }, this), \"\\uC744 \\uC77D\\uC5C8\\uC73C\\uBA70 \\uC774\\uC5D0 \\uB3D9\\uC758\\uD569\\uB2C8\\uB2E4.\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 25\n          }, this)\n        }), void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, _objectSpread(_objectSpread({}, tailFormItemLayout), {}, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            type: \"primary\",\n            htmlType: \"submit\",\n            children: \"\\uAC00\\uC785\\uD558\\uAE30\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 25\n          }, this)\n        }), void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 21\n        }, this)]\n      }), void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\nexport default Signup;","map":{"version":3,"sources":["/Users/sean/Projects/dayscore/front/pages/signup.js"],"names":["React","Head","AppLayout","Form","Input","Select","Checkbox","Button","Signup","form","useForm","onFinish","values","console","log","formItemLayout","labelCol","xs","span","sm","wrapperCol","tailFormItemLayout","offset","prefixSelector","width","type","message","required","getFieldValue","validator","_","value","Promise","resolve","reject","Error","whitespace"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Head from 'next/head';\nimport AppLayout from \"../components/AppLayout\";\nimport { Form, Input, Select, Checkbox, Button } from 'antd';\n\nconst Signup = () => {\n    const [form] = Form.useForm();\n\n    const onFinish = (values) => {\n        console.log('Received values of form: ', values);\n    };\n\n    const formItemLayout = {\n        labelCol: {\n            xs: {\n                span: 24,\n            },\n            sm: {\n                span: 8,\n            },\n        },\n        wrapperCol: {\n            xs: {\n                span: 24,\n            },\n            sm: {\n                span: 16,\n            },\n        },\n    };\n\n    const tailFormItemLayout = {\n        wrapperCol: {\n            xs: {\n                span: 24,\n                offset: 0,\n            },\n            sm: {\n                span: 16,\n                offset: 8,\n            },\n        },\n    };\n\n    const prefixSelector = (\n        <Form.Item name=\"prefix\" noStyle>\n            <Select\n                style={{\n                    width: 70,\n                }}\n            >\n                <Option value=\"010\">010</Option>\n                <Option value=\"011\">011</Option>\n            </Select>\n        </Form.Item>\n    );\n\n    return (\n        <>\n            <Head>\n                <meta charSet=\"utf-8\"/>\n                <title>회원가입</title>\n            </Head>\n            <AppLayout>\n                <Form\n                    {...formItemLayout}\n                    form={form}\n                    name=\"register\"\n                    onFinish={onFinish}\n                    scrollToFirstError\n                >\n                    <Form.Item\n                        name=\"email\"\n                        label=\"이메일\"\n                        rules={[\n                            {\n                                type: 'email',\n                                message: '유효한 이메일이 아닙니다!',\n                            },\n                            {\n                                required: true,\n                                message: '이메일을 입력해주세요!',\n                            },\n                        ]}\n                    >\n                        <Input />\n                    </Form.Item>\n\n                    <Form.Item\n                        name=\"password\"\n                        label=\"비밀번호\"\n                        rules={[\n                            {\n                                required: true,\n                                message: '비밀번호를 입력해주세요!',\n                            },\n                        ]}\n                        hasFeedback\n                    >\n                        <Input.Password />\n                    </Form.Item>\n\n                    <Form.Item\n                        name=\"confirm\"\n                        label=\"비밀번호 확인\"\n                        dependencies={['password']}\n                        hasFeedback\n                        rules={[\n                            {\n                                required: true,\n                                message: '비밀번호를 확인해주세요!',\n                            },\n                            ({ getFieldValue }) => ({\n                                validator(_, value) {\n                                    if (!value || getFieldValue('password') === value) {\n                                        return Promise.resolve();\n                                    }\n\n                                    return Promise.reject(new Error('비밀번호가 서로 일치하지 않습니다!'));\n                                },\n                            }),\n                        ]}\n                    >\n                        <Input.Password />\n                    </Form.Item>\n\n                    <Form.Item\n                        name=\"nickname\"\n                        label=\"닉네임\"\n                        tooltip=\"다른 사용자가 어떻게 불러주길 원하나요?\"\n                        rules={[\n                            {\n                                required: true,\n                                message: '닉네임을 입력해주세요!',\n                                whitespace: true,\n                            },\n                        ]}\n                    >\n                        <Input />\n                    </Form.Item>\n\n                    <Form.Item\n                        name=\"phone\"\n                        label=\"연락처\"\n                        rules={[\n                            {\n                                required: true,\n                                message: '연락처를 입력해주세요!',\n                            },\n                        ]}\n                    >\n                        <Input\n                            addonBefore={prefixSelector}\n                            style={{\n                                width: '100%',\n                            }}\n                        />\n                    </Form.Item>\n\n                    <Form.Item\n                        name=\"agreement\"\n                        valuePropName=\"checked\"\n                        rules={[\n                            {\n                                validator: (_, value) =>\n                                    value ? Promise.resolve() : Promise.reject(new Error('약관에 동의해주세요!')),\n                            },\n                        ]}\n                        {...tailFormItemLayout}\n                    >\n                        <Checkbox>\n                            해당 <a href=\"\">약관</a>을 읽었으며 이에 동의합니다.\n                        </Checkbox>\n                    </Form.Item>\n                    <Form.Item {...tailFormItemLayout}>\n                        <Button type=\"primary\" htmlType=\"submit\">\n                            가입하기\n                        </Button>\n                    </Form.Item>\n                </Form>\n            </AppLayout>\n        </>\n    );\n}\n\nexport default Signup;"]},"metadata":{},"sourceType":"module"}