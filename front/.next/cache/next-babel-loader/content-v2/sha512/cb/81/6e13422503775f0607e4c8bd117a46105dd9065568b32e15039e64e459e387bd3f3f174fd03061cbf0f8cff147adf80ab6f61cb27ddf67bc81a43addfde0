{"ast":null,"code":"import shortId from 'shortid';\nimport faker from 'faker';\nimport produce from '../util/produce';\nexport const initialState = {\n  mainActions: [],\n  loadActionsLoading: false,\n  loadActionsDone: false,\n  loadActionsError: null,\n  addActionLoading: false,\n  addActionDone: false,\n  addActionError: null,\n  removeActionLoading: false,\n  removeActionDone: false,\n  removeActionError: null\n};\nexport const LOAD_ACTIONS_REQUEST = 'LOAD_ACTIONS_REQUEST';\nexport const LOAD_ACTIONS_SUCCESS = 'LOAD_ACTIONS_SUCCESS';\nexport const LOAD_ACTIONS_FAILURE = 'LOAD_ACTIONS_FAILURE';\nexport const ADD_ACTION_REQUEST = 'ADD_ACTION_REQUEST';\nexport const ADD_ACTION_SUCCESS = 'ADD_ACTION_SUCCESS';\nexport const ADD_ACTION_FAILURE = 'ADD_ACTION_FAILURE';\nexport const REMOVE_ACTION_REQUEST = 'REMOVE_ACTION_REQUEST';\nexport const REMOVE_ACTION_SUCCESS = 'REMOVE_ACTION_SUCCESS';\nexport const REMOVE_ACTION_FAILURE = 'REMOVE_ACTION_FAILURE';\nexport const generateDummyAction = number => Array(number).fill().map(() => ({\n  id: shortId.generate(),\n  User: {\n    id: shortId.generate(),\n    nickname: faker.name.findName()\n  },\n  title: faker.lorem.word(),\n  description: faker.lorem.sentences(),\n  score: faker.random.number()\n}));\n\nconst dummyAction = data => ({\n  id: data.id,\n  title: data.title,\n  description: data.description,\n  score: data.score,\n  User: {\n    id: 1,\n    nickname: 'Sean'\n  }\n});\n\nconst reducer = (state = initialState, action) => produce(state, draft => {\n  switch (action.type) {\n    case LOAD_ACTIONS_REQUEST:\n      draft.loadActionsLoading = true;\n      draft.loadActionsError = null;\n      draft.loadActionsDone = false;\n      break;\n\n    case LOAD_ACTIONS_SUCCESS:\n      draft.loadActionsLoading = false;\n      draft.loadActionsDone = true;\n      draft.mainActions = action.data.concat(draft.mainActions);\n      draft.hasMoreActions = draft.mainActions.length < 50;\n      break;\n\n    case LOAD_ACTIONS_FAILURE:\n      draft.loadActionsLoading = false;\n      draft.loadActionsError = action.error;\n      break;\n\n    case ADD_ACTION_REQUEST:\n      draft.addActionLoading = true;\n      draft.addActionError = null;\n      draft.addActionDone = false;\n      break;\n\n    case ADD_ACTION_SUCCESS:\n      draft.addActionLoading = false;\n      draft.addActionDone = true;\n      draft.mainActions.unshift(dummyAction(action.data));\n      break;\n\n    case ADD_ACTION_FAILURE:\n      draft.addActionLoading = false;\n      draft.addActionError = action.error;\n      break;\n\n    case REMOVE_ACTION_REQUEST:\n      draft.removeActionLoading = true;\n      draft.removeActionError = null;\n      draft.removeActionDone = false;\n      break;\n\n    case REMOVE_ACTION_SUCCESS:\n      draft.removeActionLoading = false;\n      draft.removeActionDone = true;\n      draft.mainActions = draft.mainActions.filter(v => v.id !== action.data);\n      break;\n\n    case REMOVE_ACTION_FAILURE:\n      draft.removeActionLoading = false;\n      draft.removeActionError = action.error;\n      break;\n\n    default:\n      break;\n  }\n});\n\nexport default reducer;","map":{"version":3,"sources":["/Users/sean/Projects/dayscore/front/reducers/action.js"],"names":["shortId","faker","produce","initialState","mainActions","loadActionsLoading","loadActionsDone","loadActionsError","addActionLoading","addActionDone","addActionError","removeActionLoading","removeActionDone","removeActionError","LOAD_ACTIONS_REQUEST","LOAD_ACTIONS_SUCCESS","LOAD_ACTIONS_FAILURE","ADD_ACTION_REQUEST","ADD_ACTION_SUCCESS","ADD_ACTION_FAILURE","REMOVE_ACTION_REQUEST","REMOVE_ACTION_SUCCESS","REMOVE_ACTION_FAILURE","generateDummyAction","number","Array","fill","map","id","generate","User","nickname","name","findName","title","lorem","word","description","sentences","score","random","dummyAction","data","reducer","state","action","draft","type","concat","hasMoreActions","length","error","unshift","filter","v"],"mappings":"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","sourcesContent":["import shortId from 'shortid';\nimport faker from 'faker';\nimport produce from '../util/produce';\n\nexport const initialState = {\n  mainActions: [],\n  loadActionsLoading: false,\n  loadActionsDone: false,\n  loadActionsError: null,\n  addActionLoading: false,\n  addActionDone: false,\n  addActionError: null,\n  removeActionLoading: false,\n  removeActionDone: false,\n  removeActionError: null,\n};\n\nexport const LOAD_ACTIONS_REQUEST = 'LOAD_ACTIONS_REQUEST';\nexport const LOAD_ACTIONS_SUCCESS = 'LOAD_ACTIONS_SUCCESS';\nexport const LOAD_ACTIONS_FAILURE = 'LOAD_ACTIONS_FAILURE';\n\nexport const ADD_ACTION_REQUEST = 'ADD_ACTION_REQUEST';\nexport const ADD_ACTION_SUCCESS = 'ADD_ACTION_SUCCESS';\nexport const ADD_ACTION_FAILURE = 'ADD_ACTION_FAILURE';\n\nexport const REMOVE_ACTION_REQUEST = 'REMOVE_ACTION_REQUEST';\nexport const REMOVE_ACTION_SUCCESS = 'REMOVE_ACTION_SUCCESS';\nexport const REMOVE_ACTION_FAILURE = 'REMOVE_ACTION_FAILURE';\n\nexport const generateDummyAction = (number) => Array(number).fill().map(() => ({\n  id: shortId.generate(),\n  User: {\n    id: shortId.generate(),\n    nickname: faker.name.findName(),\n  },\n  title: faker.lorem.word(),\n  description: faker.lorem.sentences(),\n  score: faker.random.number(),\n}));\n\nconst dummyAction = (data) => ({\n  id: data.id,\n  title: data.title,\n  description: data.description,\n  score: data.score,\n  User: {\n    id: 1,\n    nickname: 'Sean',\n  },\n});\n\nconst reducer = (state = initialState, action) => produce(state, (draft) => {\n  switch (action.type) {\n    case LOAD_ACTIONS_REQUEST:\n      draft.loadActionsLoading = true;\n      draft.loadActionsError = null;\n      draft.loadActionsDone = false;\n      break;\n    case LOAD_ACTIONS_SUCCESS:\n      draft.loadActionsLoading = false;\n      draft.loadActionsDone = true;\n      draft.mainActions = action.data.concat(draft.mainActions);\n      draft.hasMoreActions = draft.mainActions.length < 50;\n      break;\n    case LOAD_ACTIONS_FAILURE:\n      draft.loadActionsLoading = false;\n      draft.loadActionsError = action.error;\n      break;\n    case ADD_ACTION_REQUEST:\n      draft.addActionLoading = true;\n      draft.addActionError = null;\n      draft.addActionDone = false;\n      break;\n    case ADD_ACTION_SUCCESS:\n      draft.addActionLoading = false;\n      draft.addActionDone = true;\n      draft.mainActions.unshift(dummyAction(action.data));\n      break;\n    case ADD_ACTION_FAILURE:\n      draft.addActionLoading = false;\n      draft.addActionError = action.error;\n      break;\n    case REMOVE_ACTION_REQUEST:\n      draft.removeActionLoading = true;\n      draft.removeActionError = null;\n      draft.removeActionDone = false;\n      break;\n    case REMOVE_ACTION_SUCCESS:\n      draft.removeActionLoading = false;\n      draft.removeActionDone = true;\n      draft.mainActions = draft.mainActions.filter((v) => v.id !== action.data);\n      break;\n    case REMOVE_ACTION_FAILURE:\n      draft.removeActionLoading = false;\n      draft.removeActionError = action.error;\n      break;\n    default:\n      break;\n  }\n});\n\nexport default reducer;\n"]},"metadata":{},"sourceType":"module"}