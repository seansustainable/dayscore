{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/sean/Projects/dayscore/front/components/CommentForm.js\";\nimport React, { useCallback, useState } from 'react';\nimport { Form, Button, Input } from 'antd';\nimport styled from 'styled-components';\nimport { ADD_COMMENT_REQUEST } from '../reducers/post';\nimport { useDispatch, useSelector } from \"react-redux\";\nconst ButtonWrapper = styled(Button)`\n  position: absolute;\n  right: 0;\n  bottom: -35px;\n`;\n\nconst CommentForm = ({\n  post\n}) => {\n  const {\n    0: commentText,\n    1: setCommentText\n  } = useState('');\n  const id = useSelector(state => {\n    var _state$user$me;\n\n    return (_state$user$me = state.user.me) === null || _state$user$me === void 0 ? void 0 : _state$user$me.id;\n  });\n  const {\n    addCommentDone,\n    addCommentLoading\n  } = useSelector(state => state.post);\n  const dispatch = useDispatch();\n  const onChangeCommentText = useCallback(e => {\n    setCommentText(e.target.value);\n  }, []);\n  const onSubmit = useCallback(() => {\n    console.log(commentText);\n  }, [commentText]);\n  return /*#__PURE__*/_jsxDEV(Form, {\n    onFinish: onSubmit,\n    children: /*#__PURE__*/_jsxDEV(Form.Item, {\n      style: {\n        marginTop: 5\n      },\n      children: [/*#__PURE__*/_jsxDEV(Input.TextArea, {\n        rows: 4,\n        value: commentText,\n        onChange: onChangeCommentText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ButtonWrapper, {\n        type: \"primary\",\n        htmlType: \"submit\",\n        children: \"\\uC791\\uC131\\uD558\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n};\n\nexport default CommentForm;","map":{"version":3,"sources":["/Users/sean/Projects/dayscore/front/components/CommentForm.js"],"names":["React","useCallback","useState","Form","Button","Input","styled","ADD_COMMENT_REQUEST","useDispatch","useSelector","ButtonWrapper","CommentForm","post","commentText","setCommentText","id","state","user","me","addCommentDone","addCommentLoading","dispatch","onChangeCommentText","e","target","value","onSubmit","console","log","marginTop"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,WAAf,EAA4BC,QAA5B,QAA2C,OAA3C;AACA,SAASC,IAAT,EAAeC,MAAf,EAAuBC,KAAvB,QAAoC,MAApC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,mBAAT,QAAoC,kBAApC;AACA,SAAQC,WAAR,EAAqBC,WAArB,QAAuC,aAAvC;AAEA,MAAMC,aAAa,GAAGJ,MAAM,CAACF,MAAD,CAAS;AACrC;AACA;AACA;AACA,CAJA;;AAMA,MAAMO,WAAW,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAc;AAC9B,QAAM;AAAA,OAACC,WAAD;AAAA,OAAcC;AAAd,MAAgCZ,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAMa,EAAE,GAAGN,WAAW,CAAEO,KAAD;AAAA;;AAAA,6BAAWA,KAAK,CAACC,IAAN,CAAWC,EAAtB,mDAAW,eAAeH,EAA1B;AAAA,GAAD,CAAtB;AACA,QAAM;AAAEI,IAAAA,cAAF;AAAkBC,IAAAA;AAAlB,MAAwCX,WAAW,CAAEO,KAAD,IAAWA,KAAK,CAACJ,IAAlB,CAAzD;AACA,QAAMS,QAAQ,GAAGb,WAAW,EAA5B;AAEA,QAAMc,mBAAmB,GAAGrB,WAAW,CAAEsB,CAAD,IAAO;AAC3CT,IAAAA,cAAc,CAACS,CAAC,CAACC,MAAF,CAASC,KAAV,CAAd;AACH,GAFsC,EAEpC,EAFoC,CAAvC;AAIA,QAAMC,QAAQ,GAAGzB,WAAW,CAAC,MAAM;AAC/B0B,IAAAA,OAAO,CAACC,GAAR,CAAYf,WAAZ;AACH,GAF2B,EAEzB,CAACA,WAAD,CAFyB,CAA5B;AAIA,sBACI,QAAC,IAAD;AAAM,IAAA,QAAQ,EAAEa,QAAhB;AAAA,2BACI,QAAC,IAAD,CAAM,IAAN;AAAW,MAAA,KAAK,EAAE;AAAEG,QAAAA,SAAS,EAAE;AAAb,OAAlB;AAAA,8BACI,QAAC,KAAD,CAAO,QAAP;AAAgB,QAAA,IAAI,EAAE,CAAtB;AAAyB,QAAA,KAAK,EAAEhB,WAAhC;AAA6C,QAAA,QAAQ,EAAES;AAAvD;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,aAAD;AAAe,QAAA,IAAI,EAAC,SAApB;AAA8B,QAAA,QAAQ,EAAC,QAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH,CAtBD;;AAwBA,eAAeX,WAAf","sourcesContent":["import React, {useCallback, useState} from 'react';\nimport { Form, Button, Input } from 'antd';\nimport styled from 'styled-components';\nimport { ADD_COMMENT_REQUEST } from '../reducers/post';\nimport {useDispatch, useSelector} from \"react-redux\";\n\nconst ButtonWrapper = styled(Button)`\n  position: absolute;\n  right: 0;\n  bottom: -35px;\n`;\n\nconst CommentForm = ({ post }) => {\n    const [commentText, setCommentText] = useState('');\n    const id = useSelector((state) => state.user.me?.id);\n    const { addCommentDone, addCommentLoading } = useSelector((state) => state.post);\n    const dispatch = useDispatch();\n\n    const onChangeCommentText = useCallback((e) => {\n        setCommentText(e.target.value);\n    }, []);\n\n    const onSubmit = useCallback(() => {\n        console.log(commentText);\n    }, [commentText]);\n\n    return (\n        <Form onFinish={onSubmit}>\n            <Form.Item style={{ marginTop: 5 }}>\n                <Input.TextArea rows={4} value={commentText} onChange={onChangeCommentText} />\n                <ButtonWrapper type=\"primary\" htmlType=\"submit\">작성하기</ButtonWrapper>\n            </Form.Item>\n        </Form>\n    )\n}\n\nexport default CommentForm;"]},"metadata":{},"sourceType":"module"}