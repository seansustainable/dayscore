{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/sean/Projects/dayscore/front/components/ScoreAddForm.js\";\nimport React, { useRef, useState } from 'react';\nimport { Modal, Button, List, Checkbox } from 'antd';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { ADD_SCORES_TO_ME } from '../reducers/user';\nconst plainOptions = ['Apple', 'Pear', 'Orange'];\nconst defaultCheckedList = ['Apple', 'Orange'];\n\nconst ScoreAddForm = () => {\n  const dispatch = useDispatch();\n  const {\n    0: visible,\n    1: setVisible\n  } = useState(false);\n  const {\n    0: indeterminate,\n    1: setIndeterminate\n  } = useState(true);\n  const {\n    0: checkAll,\n    1: setCheckAll\n  } = useState(false);\n  const {\n    0: checkedList,\n    1: setCheckedList\n  } = useState(defaultCheckedList);\n  const {\n    me\n  } = useSelector(state => state.user);\n\n  const showModal = () => {\n    setVisible(true);\n  };\n\n  const handleOk = () => {\n    console.log(values);\n\n    try {\n      // dispatch({\n      //   type: ADD_SCORES_TO_ME,\n      //   data: values,\n      // });\n      setVisible(false);\n    } catch (e) {\n      throw new Error(e);\n    }\n  };\n\n  const handleCancel = () => {\n    setVisible(false);\n  };\n\n  const onCheckAllChange = e => {\n    setCheckedList(e.target.checked ? plainOptions : []);\n    setIndeterminate(false);\n    setCheckAll(e.target.checked);\n  };\n\n  const onChangeCheck = list => {\n    setCheckedList(list);\n    setIndeterminate(!!list.length && list.length < plainOptions.length);\n    setCheckAll(list.length === plainOptions.length);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      type: \"primary\",\n      onClick: showModal,\n      style: {\n        width: '94%',\n        margin: '0 auto',\n        marginLeft: 10,\n        marginRight: 10\n      },\n      children: \"\\uC624\\uB298\\uC758 \\uD65C\\uB3D9 \\uC561\\uC158\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      title: \"\\uC624\\uB298\\uC758 \\uD65C\\uB3D9 \\uC561\\uC158 \\uB4F1\\uB85D\\uD558\\uAE30\",\n      visible: visible,\n      onOk: handleOk,\n      onCancel: handleCancel,\n      okText: \"\\uB4F1\\uB85D\",\n      cancelText: \"\\uCDE8\\uC18C\",\n      children: /*#__PURE__*/_jsxDEV(Checkbox.Group, {\n        style: {\n          width: '100%'\n        },\n        onChange: onChangeCheck,\n        options: plainOptions,\n        value: checkedList,\n        children: /*#__PURE__*/_jsxDEV(List, {\n          style: {\n            width: '100%'\n          },\n          size: \"small\",\n          dataSource: me.Actions,\n          renderItem: item => /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n              value: item.id,\n              indeterminate: indeterminate,\n              checked: checkAll\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(List.Item, {\n              children: [/*#__PURE__*/_jsxDEV(List.Item.Meta, {\n                title: item.title,\n                description: item.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: item.score\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\nexport default ScoreAddForm;","map":{"version":3,"sources":["/Users/sean/Projects/dayscore/front/components/ScoreAddForm.js"],"names":["React","useRef","useState","Modal","Button","List","Checkbox","useDispatch","useSelector","ADD_SCORES_TO_ME","plainOptions","defaultCheckedList","ScoreAddForm","dispatch","visible","setVisible","indeterminate","setIndeterminate","checkAll","setCheckAll","checkedList","setCheckedList","me","state","user","showModal","handleOk","console","log","values","e","Error","handleCancel","onCheckAllChange","target","checked","onChangeCheck","list","length","width","margin","marginLeft","marginRight","Actions","item","id","title","description","score"],"mappings":"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","sourcesContent":["import React, { useRef, useState } from 'react';\nimport { Modal, Button, List, Checkbox } from 'antd';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { ADD_SCORES_TO_ME } from '../reducers/user';\n\nconst plainOptions = ['Apple', 'Pear', 'Orange'];\nconst defaultCheckedList = ['Apple', 'Orange'];\n\nconst ScoreAddForm = () => {\n  const dispatch = useDispatch();\n  const [visible, setVisible] = useState(false);\n  const [indeterminate, setIndeterminate] = useState(true);\n  const [checkAll, setCheckAll] = useState(false);\n  const [checkedList, setCheckedList] = useState(defaultCheckedList);\n  const { me } = useSelector((state) => state.user);\n\n  const showModal = () => {\n    setVisible(true);\n  };\n\n  const handleOk = () => {\n    console.log(values);\n    try {\n      // dispatch({\n      //   type: ADD_SCORES_TO_ME,\n      //   data: values,\n      // });\n      setVisible(false);\n    } catch (e) {\n      throw new Error(e);\n    }\n  };\n\n  const handleCancel = () => {\n    setVisible(false);\n  };\n\n  const onCheckAllChange = (e) => {\n    setCheckedList(e.target.checked ? plainOptions : []);\n    setIndeterminate(false);\n    setCheckAll(e.target.checked);\n  };\n\n  const onChangeCheck = (list) => {\n    setCheckedList(list);\n    setIndeterminate(!!list.length && list.length < plainOptions.length);\n    setCheckAll(list.length === plainOptions.length);\n  };\n\n  return (\n    <>\n      <Button type=\"primary\" onClick={showModal} style={{ width: '94%', margin: '0 auto', marginLeft: 10, marginRight: 10 }}>\n        오늘의 활동 액션\n      </Button>\n      <Modal\n        title=\"오늘의 활동 액션 등록하기\"\n        visible={visible}\n        onOk={handleOk}\n        onCancel={handleCancel}\n        okText=\"등록\"\n        cancelText=\"취소\"\n      >\n        <Checkbox.Group style={{ width: '100%' }} onChange={onChangeCheck} options={plainOptions} value={checkedList}>\n          <List\n            style={{ width: '100%' }}\n            size=\"small\"\n            dataSource={me.Actions}\n            renderItem={(item) => (\n              <>\n                <Checkbox value={item.id} indeterminate={indeterminate} checked={checkAll} />\n                <List.Item>\n                  <List.Item.Meta\n                    title={item.title}\n                    description={item.description}\n                  />\n                  <div>{item.score}</div>\n                </List.Item>\n              </>\n            )}\n          />\n        </Checkbox.Group>\n      </Modal>\n    </>\n  );\n};\n\nexport default ScoreAddForm;\n"]},"metadata":{},"sourceType":"module"}