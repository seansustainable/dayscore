{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/sean/Projects/dayscore/front/components/LoginForm.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useCallback, useMemo } from 'react';\nimport { Form, Input, Button } from 'antd';\nimport Link from 'next/link';\nimport styled from 'styled-components';\nimport { useDispatch } from \"react-redux\";\nimport { LOG_IN_REQUEST } from '../reducers/user';\nconst FormWrapper = styled(Form)`\n  margin-top: 20px;\n`;\n\nconst LoginForm = () =>\n/*{ setIsLoggedIn }*/\n{\n  const dispatch = useDispatch();\n  const layout = {\n    labelCol: {\n      span: 7\n    },\n    wrapperCol: {\n      span: 14\n    }\n  };\n  const tailLayout = {\n    wrapperCol: {\n      offset: 7,\n      span: 14\n    }\n  };\n  const buttonStyle = useMemo(() => ({\n    marginRight: 15\n  }), []);\n  const onFinish = useCallback(values => {\n    console.log('Success:', values);\n    const email = values.email;\n    const password = values.password; // setIsLoggedIn(true);\n\n    dispatch({\n      type: LOG_IN_REQUEST,\n      data: {\n        email,\n        password\n      }\n    });\n  }, []);\n  const onFinishFailed = useCallback(errorInfo => {\n    console.log('Failed:', errorInfo);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(FormWrapper, _objectSpread(_objectSpread({}, layout), {}, {\n    initialValues: {\n      remember: true\n    },\n    onFinish: onFinish,\n    onFinishFailed: onFinishFailed,\n    children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n      label: \"\\uC774\\uBA54\\uC77C\",\n      name: \"email\",\n      rules: [{\n        required: true,\n        message: '이메일을 입력해주세요!'\n      }],\n      children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      label: \"\\uBE44\\uBC00\\uBC88\\uD638\",\n      name: \"password\",\n      rules: [{\n        required: true,\n        message: '비밀번호를 입력해주세요!'\n      }],\n      children: /*#__PURE__*/_jsxDEV(Input.Password, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, _objectSpread(_objectSpread({}, tailLayout), {}, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        htmlType: \"submit\",\n        loading: false,\n        style: buttonStyle,\n        children: \"\\uB85C\\uADF8\\uC778\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        href: \"/signup\",\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          children: \"\\uD68C\\uC6D0\\uAC00\\uC785\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 38\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this)]\n    }), void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this)]\n  }), void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n};\n\nexport default LoginForm;","map":{"version":3,"sources":["/Users/sean/Projects/dayscore/front/components/LoginForm.js"],"names":["React","useCallback","useMemo","Form","Input","Button","Link","styled","useDispatch","LOG_IN_REQUEST","FormWrapper","LoginForm","dispatch","layout","labelCol","span","wrapperCol","tailLayout","offset","buttonStyle","marginRight","onFinish","values","console","log","email","password","type","data","onFinishFailed","errorInfo","remember","required","message"],"mappings":"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","sourcesContent":["import React, {useCallback, useMemo} from 'react';\nimport { Form, Input, Button } from 'antd';\nimport Link from 'next/link';\nimport styled from 'styled-components';\nimport {useDispatch} from \"react-redux\";\nimport { LOG_IN_REQUEST } from '../reducers/user';\n\nconst FormWrapper = styled(Form)`\n  margin-top: 20px;\n`;\n\nconst LoginForm = (/*{ setIsLoggedIn }*/) => {\n    const dispatch = useDispatch();\n\n    const layout = {\n        labelCol: {\n            span: 7,\n        },\n        wrapperCol: {\n            span: 14,\n        },\n    };\n\n    const tailLayout = {\n        wrapperCol: {\n            offset: 7,\n            span: 14,\n        },\n    };\n\n    const buttonStyle = useMemo(() => ({ marginRight: 15 }), [])\n\n    const onFinish = useCallback((values) => {\n        console.log('Success:', values);\n        const email = values.email;\n        const password = values.password;\n        // setIsLoggedIn(true);\n        dispatch({\n            type: LOG_IN_REQUEST,\n            data: { email, password }\n        })\n    }, []);\n\n    const onFinishFailed = useCallback((errorInfo) => {\n        console.log('Failed:', errorInfo);\n    }, []);\n\n    return (\n        <FormWrapper\n            {...layout}\n            initialValues={{\n                remember: true,\n            }}\n            onFinish={onFinish}\n            onFinishFailed={onFinishFailed}\n        >\n            <Form.Item\n                label=\"이메일\"\n                name=\"email\"\n                rules={[\n                    {\n                        required: true,\n                        message: '이메일을 입력해주세요!',\n                    },\n                ]}\n            >\n                <Input />\n            </Form.Item>\n\n            <Form.Item\n                label=\"비밀번호\"\n                name=\"password\"\n                rules={[\n                    {\n                        required: true,\n                        message: '비밀번호를 입력해주세요!',\n                    },\n                ]}\n            >\n                <Input.Password />\n            </Form.Item>\n\n            <Form.Item {...tailLayout}>\n                <Button type=\"primary\" htmlType=\"submit\" loading={false} style={buttonStyle}>\n                    로그인\n                </Button>\n                <Link href=\"/signup\"><a>회원가입</a></Link>\n            </Form.Item>\n        </FormWrapper>\n    );\n}\n\nexport default LoginForm;"]},"metadata":{},"sourceType":"module"}