{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/sean/Projects/dayscore/front/components/PostForm.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useEffect, useMemo, useRef, useState } from 'react';\nimport { Form, Input, Button } from 'antd';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { ADD_POST_REQUEST, UPLOAD_IMAGES_REQUEST, REMOVE_IMAGE } from '../reducers/post';\n\nvar PostForm = function PostForm() {\n  _s();\n\n  var _useState = useState(''),\n      text = _useState[0],\n      setText = _useState[1];\n\n  var dispatch = useDispatch();\n  var imageInput = useRef();\n\n  var _useSelector = useSelector(function (state) {\n    return state.post;\n  }),\n      imagePaths = _useSelector.imagePaths,\n      addPostLoading = _useSelector.addPostLoading,\n      addPostDone = _useSelector.addPostDone;\n\n  useEffect(function () {\n    if (addPostDone) {\n      setText('');\n    }\n  }, [addPostDone]);\n  var styleForm = useMemo(function () {\n    return {\n      margin: 20\n    };\n  }, []);\n  var onChangeText = useCallback(function (e) {\n    setText(e.target.value);\n  }, []);\n  var onClickImageUpload = useCallback(function () {\n    imageInput.current.click();\n  }, [imageInput.current]);\n  var onSubmit = useCallback(function () {\n    if (!text || !text.trim()) {\n      return alert('게시글을 작성하세요.');\n    }\n\n    dispatch({\n      type: ADD_POST_REQUEST,\n      data: {\n        text: text\n      }\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Form, {\n    style: styleForm,\n    encType: \"multipart/form-data\",\n    onFinish: onSubmit,\n    children: [/*#__PURE__*/_jsxDEV(Input.TextArea, {\n      value: text,\n      onChange: onChangeText,\n      maxLength: 140,\n      placeholder: \"\\uC5B4\\uB5A4 \\uC77C\\uC774 \\uC788\\uC5C8\\uB098\\uC694?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        multiple: true,\n        hidden: true,\n        ref: imageInput\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: onClickImageUpload,\n        style: {\n          marginTop: 3\n        },\n        children: \"\\uC774\\uBBF8\\uC9C0 \\uC5C5\\uB85C\\uB4DC\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        style: {\n          \"float\": 'right',\n          marginTop: 3\n        },\n        htmlType: \"submit\",\n        loading: addPostLoading,\n        children: \"\\uC791\\uC131\\uD558\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: imagePaths.map(function (v) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'inline-block'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"http://localhost:3065/\".concat(v),\n            style: {\n              width: '200px'\n            },\n            alt: v\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              children: \"\\uC0AD\\uC81C\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 15\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, _this)]\n        }, v, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, _this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(PostForm, \"kwIxc0O4qYBAa0aKNVNqLtIJCn8=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = PostForm;\nexport default PostForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostForm\");","map":{"version":3,"sources":["/Users/sean/Projects/dayscore/front/components/PostForm.js"],"names":["React","useCallback","useEffect","useMemo","useRef","useState","Form","Input","Button","useDispatch","useSelector","ADD_POST_REQUEST","UPLOAD_IMAGES_REQUEST","REMOVE_IMAGE","PostForm","text","setText","dispatch","imageInput","state","post","imagePaths","addPostLoading","addPostDone","styleForm","margin","onChangeText","e","target","value","onClickImageUpload","current","click","onSubmit","trim","alert","type","data","marginTop","map","v","display","width"],"mappings":"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","sourcesContent":["import React, { useCallback, useEffect, useMemo, useRef, useState } from 'react';\nimport { Form, Input, Button } from 'antd';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { ADD_POST_REQUEST, UPLOAD_IMAGES_REQUEST, REMOVE_IMAGE } from '../reducers/post';\n\nconst PostForm = () => {\n  const [text, setText] = useState('');\n  const dispatch = useDispatch();\n  const imageInput = useRef();\n  const { imagePaths, addPostLoading, addPostDone } = useSelector((state) => state.post);\n\n  useEffect(() => {\n    if (addPostDone) {\n      setText('');\n    }\n  }, [addPostDone]);\n\n  const styleForm = useMemo(() => ({ margin: 20 }), []);\n\n  const onChangeText = useCallback((e) => {\n    setText(e.target.value);\n  }, []);\n\n  const onClickImageUpload = useCallback(() => {\n    imageInput.current.click();\n  }, [imageInput.current]);\n\n  const onSubmit = useCallback(() => {\n    if (!text || !text.trim()) {\n      return alert('게시글을 작성하세요.');\n    }\n\n    dispatch({\n      type: ADD_POST_REQUEST,\n      data: {\n        text,\n      },\n    });\n  }, []);\n\n  return (\n    <Form style={styleForm} encType=\"multipart/form-data\" onFinish={onSubmit}>\n      <Input.TextArea value={text} onChange={onChangeText} maxLength={140} placeholder=\"어떤 일이 있었나요?\" />\n      <div>\n        <input type=\"file\" multiple hidden ref={imageInput} />\n        <Button onClick={onClickImageUpload} style={{ marginTop: 3 }}>이미지 업로드</Button>\n        <Button type=\"primary\" style={{ float: 'right', marginTop: 3 }} htmlType=\"submit\" loading={addPostLoading}>작성하기</Button>\n      </div>\n      <div>\n        {imagePaths.map((v) => (\n          <div key={v} style={{ display: 'inline-block' }}>\n            <img src={`http://localhost:3065/${v}`} style={{ width: '200px' }} alt={v} />\n            <div>\n              <Button>삭제</Button>\n            </div>\n          </div>\n        ))}\n      </div>\n    </Form>\n  );\n};\n\nexport default PostForm;\n"]},"metadata":{},"sourceType":"module"}