{"ast":null,"code":"import _defineProperty from \"/Users/sean/Projects/dayscore/front/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { HYDRATE } from 'next-redux-wrapper';\nimport { combineReducers } from 'redux';\nimport user from './user';\nimport post from './post';\nimport actionReducer from './action';\nvar rootReducer = combineReducers({\n  index: function index() {\n    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var action = arguments.length > 1 ? arguments[1] : undefined;\n\n    switch (action.type) {\n      case HYDRATE:\n        console.log('HYDRATE', action);\n        return _objectSpread(_objectSpread({}, state), action.payload);\n\n      default:\n        return state;\n    }\n  },\n  user: user,\n  post: post,\n  actionReducer: actionReducer\n});\nexport default rootReducer;","map":{"version":3,"sources":["/Users/sean/Projects/dayscore/front/reducers/index.js"],"names":["HYDRATE","combineReducers","user","post","actionReducer","rootReducer","index","state","action","type","console","log","payload"],"mappings":";;;;;;AAAA,SAASA,OAAT,QAAwB,oBAAxB;AACA,SAASC,eAAT,QAAgC,OAAhC;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,aAAP,MAA0B,UAA1B;AAEA,IAAMC,WAAW,GAAGJ,eAAe,CAAC;AAClCK,EAAAA,KAAK,EAAE,iBAAwB;AAAA,QAAvBC,KAAuB,uEAAf,EAAe;AAAA,QAAXC,MAAW;;AAC7B,YAAQA,MAAM,CAACC,IAAf;AACE,WAAKT,OAAL;AACEU,QAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBH,MAAvB;AACA,+CAAYD,KAAZ,GAAsBC,MAAM,CAACI,OAA7B;;AACF;AACE,eAAOL,KAAP;AALJ;AAOD,GATiC;AAUlCL,EAAAA,IAAI,EAAJA,IAVkC;AAWlCC,EAAAA,IAAI,EAAJA,IAXkC;AAYlCC,EAAAA,aAAa,EAAbA;AAZkC,CAAD,CAAnC;AAeA,eAAeC,WAAf","sourcesContent":["import { HYDRATE } from 'next-redux-wrapper';\nimport { combineReducers } from 'redux';\nimport user from './user';\nimport post from './post';\nimport actionReducer from './action';\n\nconst rootReducer = combineReducers({\n  index: (state = {}, action) => {\n    switch (action.type) {\n      case HYDRATE:\n        console.log('HYDRATE', action);\n        return { ...state, ...action.payload };\n      default:\n        return state;\n    }\n  },\n  user,\n  post,\n  actionReducer,\n});\n\nexport default rootReducer;\n"]},"metadata":{},"sourceType":"module"}