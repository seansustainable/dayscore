{"ast":null,"code":"import shortId from 'shortid';\nimport faker from 'faker';\nimport produce from '../util/produce';\nexport var initialState = {\n  mainActions: [],\n  loadActionsLoading: false,\n  loadActionsDone: false,\n  loadActionsError: null,\n  addActionLoading: false,\n  addActionDone: false,\n  addActionError: null,\n  removeActionLoading: false,\n  removeActionDone: false,\n  removeActionError: null\n};\nexport var LOAD_ACTIONS_REQUEST = 'LOAD_ACTIONS_REQUEST';\nexport var LOAD_ACTIONS_SUCCESS = 'LOAD_ACTIONS_SUCCESS';\nexport var LOAD_ACTIONS_FAILURE = 'LOAD_ACTIONS_FAILURE';\nexport var ADD_ACTION_REQUEST = 'ADD_ACTION_REQUEST';\nexport var ADD_ACTION_SUCCESS = 'ADD_ACTION_SUCCESS';\nexport var ADD_ACTION_FAILURE = 'ADD_ACTION_FAILURE';\nexport var REMOVE_ACTION_REQUEST = 'REMOVE_ACTION_REQUEST';\nexport var REMOVE_ACTION_SUCCESS = 'REMOVE_ACTION_SUCCESS';\nexport var REMOVE_ACTION_FAILURE = 'REMOVE_ACTION_FAILURE';\nexport var generateDummyAction = function generateDummyAction(number) {\n  return Array(number).fill().map(function () {\n    return {\n      id: shortId.generate(),\n      User: {\n        id: shortId.generate(),\n        nickname: faker.name.findName()\n      },\n      description: faker.lorem.paragraph(),\n      score: faker.random.number\n    };\n  });\n};\n\nvar dummyAction = function dummyAction(data) {\n  return {\n    id: data.id,\n    title: data.title,\n    description: data.description,\n    score: data.score,\n    User: {\n      id: 1,\n      nickname: 'Sean'\n    }\n  };\n};\n\nvar reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  return produce(state, function (draft) {\n    switch (action.type) {\n      case LOAD_ACTIONS_REQUEST:\n        draft.loadActionsLoading = true;\n        draft.loadActionsError = null;\n        draft.loadActionsDone = false;\n        break;\n\n      case LOAD_ACTIONS_SUCCESS:\n        draft.loadActionsLoading = false;\n        draft.loadActionsDone = true;\n        draft.mainActions = action.data.concat(draft.mainActions);\n        draft.hasMoreActions = draft.mainActions.length < 50;\n        break;\n\n      case LOAD_ACTIONS_FAILURE:\n        draft.loadActionsLoading = false;\n        draft.loadActionsError = action.error;\n        break;\n\n      case ADD_ACTION_REQUEST:\n        draft.addActionLoading = true;\n        draft.addActionError = null;\n        draft.addActionDone = false;\n        break;\n\n      case ADD_ACTION_SUCCESS:\n        draft.addActionLoading = false;\n        draft.addActionDone = true;\n        draft.mainActions.unshift(dummyAction(action.data));\n        break;\n\n      case ADD_ACTION_FAILURE:\n        draft.addActionLoading = false;\n        draft.addActionError = action.error;\n        break;\n\n      case REMOVE_ACTION_REQUEST:\n        draft.removeActionLoading = true;\n        draft.removeActionError = null;\n        draft.removeActionDone = false;\n        break;\n\n      case REMOVE_ACTION_SUCCESS:\n        draft.removeActionLoading = false;\n        draft.removeActionDone = true;\n        draft.mainActions = draft.mainActions.filter(function (v) {\n          return v.id !== action.data;\n        });\n        break;\n\n      case REMOVE_ACTION_FAILURE:\n        draft.removeActionLoading = false;\n        draft.removeActionError = action.error;\n        break;\n\n      default:\n        break;\n    }\n  });\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/sean/Projects/dayscore/front/reducers/action.js"],"names":["shortId","faker","produce","initialState","mainActions","loadActionsLoading","loadActionsDone","loadActionsError","addActionLoading","addActionDone","addActionError","removeActionLoading","removeActionDone","removeActionError","LOAD_ACTIONS_REQUEST","LOAD_ACTIONS_SUCCESS","LOAD_ACTIONS_FAILURE","ADD_ACTION_REQUEST","ADD_ACTION_SUCCESS","ADD_ACTION_FAILURE","REMOVE_ACTION_REQUEST","REMOVE_ACTION_SUCCESS","REMOVE_ACTION_FAILURE","generateDummyAction","number","Array","fill","map","id","generate","User","nickname","name","findName","description","lorem","paragraph","score","random","dummyAction","data","title","reducer","state","action","draft","type","concat","hasMoreActions","length","error","unshift","filter","v"],"mappings":"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","sourcesContent":["import shortId from 'shortid';\nimport faker from 'faker';\nimport produce from '../util/produce';\n\nexport const initialState = {\n  mainActions: [],\n  loadActionsLoading: false,\n  loadActionsDone: false,\n  loadActionsError: null,\n  addActionLoading: false,\n  addActionDone: false,\n  addActionError: null,\n  removeActionLoading: false,\n  removeActionDone: false,\n  removeActionError: null,\n};\n\nexport const LOAD_ACTIONS_REQUEST = 'LOAD_ACTIONS_REQUEST';\nexport const LOAD_ACTIONS_SUCCESS = 'LOAD_ACTIONS_SUCCESS';\nexport const LOAD_ACTIONS_FAILURE = 'LOAD_ACTIONS_FAILURE';\n\nexport const ADD_ACTION_REQUEST = 'ADD_ACTION_REQUEST';\nexport const ADD_ACTION_SUCCESS = 'ADD_ACTION_SUCCESS';\nexport const ADD_ACTION_FAILURE = 'ADD_ACTION_FAILURE';\n\nexport const REMOVE_ACTION_REQUEST = 'REMOVE_ACTION_REQUEST';\nexport const REMOVE_ACTION_SUCCESS = 'REMOVE_ACTION_SUCCESS';\nexport const REMOVE_ACTION_FAILURE = 'REMOVE_ACTION_FAILURE';\n\nexport const generateDummyAction = (number) => Array(number).fill().map(() => ({\n  id: shortId.generate(),\n  User: {\n    id: shortId.generate(),\n    nickname: faker.name.findName(),\n  },\n  description: faker.lorem.paragraph(),\n  score: faker.random.number,\n}));\n\nconst dummyAction = (data) => ({\n  id: data.id,\n  title: data.title,\n  description: data.description,\n  score: data.score,\n  User: {\n    id: 1,\n    nickname: 'Sean',\n  },\n});\n\nconst reducer = (state = initialState, action) => produce(state, (draft) => {\n  switch (action.type) {\n    case LOAD_ACTIONS_REQUEST:\n      draft.loadActionsLoading = true;\n      draft.loadActionsError = null;\n      draft.loadActionsDone = false;\n      break;\n    case LOAD_ACTIONS_SUCCESS:\n      draft.loadActionsLoading = false;\n      draft.loadActionsDone = true;\n      draft.mainActions = action.data.concat(draft.mainActions);\n      draft.hasMoreActions = draft.mainActions.length < 50;\n      break;\n    case LOAD_ACTIONS_FAILURE:\n      draft.loadActionsLoading = false;\n      draft.loadActionsError = action.error;\n      break;\n    case ADD_ACTION_REQUEST:\n      draft.addActionLoading = true;\n      draft.addActionError = null;\n      draft.addActionDone = false;\n      break;\n    case ADD_ACTION_SUCCESS:\n      draft.addActionLoading = false;\n      draft.addActionDone = true;\n      draft.mainActions.unshift(dummyAction(action.data));\n      break;\n    case ADD_ACTION_FAILURE:\n      draft.addActionLoading = false;\n      draft.addActionError = action.error;\n      break;\n    case REMOVE_ACTION_REQUEST:\n      draft.removeActionLoading = true;\n      draft.removeActionError = null;\n      draft.removeActionDone = false;\n      break;\n    case REMOVE_ACTION_SUCCESS:\n      draft.removeActionLoading = false;\n      draft.removeActionDone = true;\n      draft.mainActions = draft.mainActions.filter((v) => v.id !== action.data);\n      break;\n    case REMOVE_ACTION_FAILURE:\n      draft.removeActionLoading = false;\n      draft.removeActionError = action.error;\n      break;\n    default:\n      break;\n  }\n});\n\nexport default reducer;\n"]},"metadata":{},"sourceType":"module"}