{"ast":null,"code":"import shortId from 'shortid';\nimport faker from 'faker';\nimport produce from '../util/produce';\nexport const initialState = {\n  mainActions: [{\n    id: 1,\n    title: '물 마시기',\n    description: '하루에 물 7잔 마시기',\n    score: 1\n  }, {\n    id: 2,\n    title: '커밋 하기',\n    description: '1일 1커밋 이상',\n    score: 2\n  }, {\n    id: 3,\n    title: '블로그 포스팅하기',\n    description: '1일 1포스팅 이상',\n    score: 3\n  }],\n  loadActionsLoading: false,\n  loadActionsDone: false,\n  loadActionsError: null,\n  addActionLoading: false,\n  addActionDone: false,\n  addActionError: null,\n  removeActionLoading: false,\n  removeActionDone: false,\n  removeActionError: null,\n  addScoresDone: false,\n  addScoresError: null,\n  removeScoresLoading: false,\n  removeScoresDone: false,\n  removeScoresError: null\n};\nexport const LOAD_ACTIONS_REQUEST = 'LOAD_ACTIONS_REQUEST';\nexport const LOAD_ACTIONS_SUCCESS = 'LOAD_ACTIONS_SUCCESS';\nexport const LOAD_ACTIONS_FAILURE = 'LOAD_ACTIONS_FAILURE';\nexport const ADD_ACTION_REQUEST = 'ADD_ACTION_REQUEST';\nexport const ADD_ACTION_SUCCESS = 'ADD_ACTION_SUCCESS';\nexport const ADD_ACTION_FAILURE = 'ADD_ACTION_FAILURE';\nexport const REMOVE_ACTION_REQUEST = 'REMOVE_ACTION_REQUEST';\nexport const REMOVE_ACTION_SUCCESS = 'REMOVE_ACTION_SUCCESS';\nexport const REMOVE_ACTION_FAILURE = 'REMOVE_ACTION_FAILURE';\nexport const generateDummyAction = number => Array(number).fill().map(() => ({\n  id: shortId.generate(),\n  User: {\n    id: shortId.generate(),\n    nickname: faker.name.findName()\n  },\n  title: faker.lorem.word(),\n  description: faker.lorem.sentences(),\n  score: faker.random.number()\n}));\n\nconst dummyAction = data => ({\n  id: data.id,\n  title: data.title,\n  description: data.description,\n  score: data.score,\n  User: {\n    id: 1,\n    nickname: 'Sean'\n  }\n});\n\nconst reducer = (state = initialState, action) => produce(state, draft => {\n  switch (action.type) {\n    case LOAD_ACTIONS_REQUEST:\n      draft.loadActionsLoading = true;\n      draft.loadActionsError = null;\n      draft.loadActionsDone = false;\n      break;\n\n    case LOAD_ACTIONS_SUCCESS:\n      draft.loadActionsLoading = false;\n      draft.loadActionsDone = true;\n      draft.mainActions = action.data.concat(draft.mainActions);\n      draft.hasMoreActions = draft.mainActions.length < 50;\n      break;\n\n    case LOAD_ACTIONS_FAILURE:\n      draft.loadActionsLoading = false;\n      draft.loadActionsError = action.error;\n      break;\n\n    case ADD_ACTION_REQUEST:\n      draft.addActionLoading = true;\n      draft.addActionError = null;\n      draft.addActionDone = false;\n      break;\n\n    case ADD_ACTION_SUCCESS:\n      draft.addActionLoading = false;\n      draft.addActionDone = true;\n      draft.mainActions.unshift(dummyAction(action.data));\n      break;\n\n    case ADD_ACTION_FAILURE:\n      draft.addActionLoading = false;\n      draft.addActionError = action.error;\n      break;\n\n    case REMOVE_ACTION_REQUEST:\n      draft.removeActionLoading = true;\n      draft.removeActionError = null;\n      draft.removeActionDone = false;\n      break;\n\n    case REMOVE_ACTION_SUCCESS:\n      draft.removeActionLoading = false;\n      draft.removeActionDone = true;\n      draft.mainActions = draft.mainActions.filter(v => v.id !== action.data);\n      break;\n\n    default:\n      break;\n  }\n});\n\nexport default reducer;","map":{"version":3,"sources":["/Users/sean/Projects/dayscore/front/reducers/action.js"],"names":["shortId","faker","produce","initialState","mainActions","id","title","description","score","loadActionsLoading","loadActionsDone","loadActionsError","addActionLoading","addActionDone","addActionError","removeActionLoading","removeActionDone","removeActionError","addScoresDone","addScoresError","removeScoresLoading","removeScoresDone","removeScoresError","LOAD_ACTIONS_REQUEST","LOAD_ACTIONS_SUCCESS","LOAD_ACTIONS_FAILURE","ADD_ACTION_REQUEST","ADD_ACTION_SUCCESS","ADD_ACTION_FAILURE","REMOVE_ACTION_REQUEST","REMOVE_ACTION_SUCCESS","REMOVE_ACTION_FAILURE","generateDummyAction","number","Array","fill","map","generate","User","nickname","name","findName","lorem","word","sentences","random","dummyAction","data","reducer","state","action","draft","type","concat","hasMoreActions","length","error","unshift","filter","v"],"mappings":"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","sourcesContent":["import shortId from 'shortid';\nimport faker from 'faker';\nimport produce from '../util/produce';\n\nexport const initialState = {\n  mainActions: [\n    { id: 1, title: '물 마시기', description: '하루에 물 7잔 마시기', score: 1 },\n    { id: 2, title: '커밋 하기', description: '1일 1커밋 이상', score: 2 },\n    { id: 3, title: '블로그 포스팅하기', description: '1일 1포스팅 이상', score: 3 },\n  ],\n  loadActionsLoading: false,\n  loadActionsDone: false,\n  loadActionsError: null,\n  addActionLoading: false,\n  addActionDone: false,\n  addActionError: null,\n  removeActionLoading: false,\n  removeActionDone: false,\n  removeActionError: null,\n  addScoresDone: false,\n  addScoresError: null,\n  removeScoresLoading: false,\n  removeScoresDone: false,\n  removeScoresError: null,\n};\n\nexport const LOAD_ACTIONS_REQUEST = 'LOAD_ACTIONS_REQUEST';\nexport const LOAD_ACTIONS_SUCCESS = 'LOAD_ACTIONS_SUCCESS';\nexport const LOAD_ACTIONS_FAILURE = 'LOAD_ACTIONS_FAILURE';\n\nexport const ADD_ACTION_REQUEST = 'ADD_ACTION_REQUEST';\nexport const ADD_ACTION_SUCCESS = 'ADD_ACTION_SUCCESS';\nexport const ADD_ACTION_FAILURE = 'ADD_ACTION_FAILURE';\n\nexport const REMOVE_ACTION_REQUEST = 'REMOVE_ACTION_REQUEST';\nexport const REMOVE_ACTION_SUCCESS = 'REMOVE_ACTION_SUCCESS';\nexport const REMOVE_ACTION_FAILURE = 'REMOVE_ACTION_FAILURE';\n\nexport const generateDummyAction = (number) => Array(number).fill().map(() => ({\n  id: shortId.generate(),\n  User: {\n    id: shortId.generate(),\n    nickname: faker.name.findName(),\n  },\n  title: faker.lorem.word(),\n  description: faker.lorem.sentences(),\n  score: faker.random.number(),\n}));\n\nconst dummyAction = (data) => ({\n  id: data.id,\n  title: data.title,\n  description: data.description,\n  score: data.score,\n  User: {\n    id: 1,\n    nickname: 'Sean',\n  },\n});\n\nconst reducer = (state = initialState, action) => produce(state, (draft) => {\n  switch (action.type) {\n    case LOAD_ACTIONS_REQUEST:\n      draft.loadActionsLoading = true;\n      draft.loadActionsError = null;\n      draft.loadActionsDone = false;\n      break;\n    case LOAD_ACTIONS_SUCCESS:\n      draft.loadActionsLoading = false;\n      draft.loadActionsDone = true;\n      draft.mainActions = action.data.concat(draft.mainActions);\n      draft.hasMoreActions = draft.mainActions.length < 50;\n      break;\n    case LOAD_ACTIONS_FAILURE:\n      draft.loadActionsLoading = false;\n      draft.loadActionsError = action.error;\n      break;\n    case ADD_ACTION_REQUEST:\n      draft.addActionLoading = true;\n      draft.addActionError = null;\n      draft.addActionDone = false;\n      break;\n    case ADD_ACTION_SUCCESS:\n      draft.addActionLoading = false;\n      draft.addActionDone = true;\n      draft.mainActions.unshift(dummyAction(action.data));\n      break;\n    case ADD_ACTION_FAILURE:\n      draft.addActionLoading = false;\n      draft.addActionError = action.error;\n      break;\n    case REMOVE_ACTION_REQUEST:\n      draft.removeActionLoading = true;\n      draft.removeActionError = null;\n      draft.removeActionDone = false;\n      break;\n    case REMOVE_ACTION_SUCCESS:\n      draft.removeActionLoading = false;\n      draft.removeActionDone = true;\n      draft.mainActions = draft.mainActions.filter((v) => v.id !== action.data);\n      break;\n    default:\n      break;\n  }\n});\n\nexport default reducer;\n"]},"metadata":{},"sourceType":"module"}