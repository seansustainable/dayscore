{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/sean/Projects/dayscore/front/components/ScoreAddForm.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from 'react';\nimport { Modal, Button, List, Checkbox } from 'antd';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { ADD_SCORES_TO_ME } from '../reducers/user';\n\nvar ScoreAddForm = function ScoreAddForm() {\n  _s();\n\n  var dispatch = useDispatch();\n\n  var _useState = useState(false),\n      visible = _useState[0],\n      setVisible = _useState[1];\n\n  var _useState2 = useState(true),\n      indeterminate = _useState2[0],\n      setIndeterminate = _useState2[1];\n\n  var _useState3 = useState(false),\n      checkAll = _useState3[0],\n      setCheckAll = _useState3[1];\n\n  var _useState4 = useState(defaultCheckedList),\n      checkedList = _useState4[0],\n      setCheckedList = _useState4[1];\n\n  var _useSelector = useSelector(function (state) {\n    return state.user;\n  }),\n      me = _useSelector.me; // useEffect(() => {\n  //   me.Actions.map((item) => plainOptions.push(item.id));\n  //   console.log(plainOptions);\n  // }, []);\n\n\n  var showModal = function showModal() {\n    setVisible(true);\n  };\n\n  var handleOk = function handleOk() {\n    // console.log(values);\n    try {\n      // dispatch({\n      //   type: ADD_SCORES_TO_ME,\n      //   data: values,\n      // });\n      setVisible(false);\n    } catch (e) {\n      throw new Error(e);\n    }\n  };\n\n  var handleCancel = function handleCancel() {\n    setVisible(false);\n  };\n\n  var onCheckAllChange = function onCheckAllChange(e) {\n    setCheckedList(e.target.checked ? plainOptions : []);\n    setIndeterminate(false);\n    setCheckAll(e.target.checked);\n  };\n\n  var onChangeCheck = function onChangeCheck(list) {\n    setCheckedList(list);\n    setIndeterminate(!!list.length && list.length < plainOptions.length);\n    setCheckAll(list.length === plainOptions.length);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      type: \"primary\",\n      onClick: showModal,\n      style: {\n        width: '94%',\n        margin: '0 auto',\n        marginLeft: 10,\n        marginRight: 10\n      },\n      children: \"\\uC624\\uB298\\uC758 \\uD65C\\uB3D9 \\uC561\\uC158\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(Modal, {\n      title: \"\\uC624\\uB298\\uC758 \\uD65C\\uB3D9 \\uC561\\uC158 \\uB4F1\\uB85D\\uD558\\uAE30\",\n      visible: visible,\n      onOk: handleOk,\n      onCancel: handleCancel,\n      okText: \"\\uB4F1\\uB85D\",\n      cancelText: \"\\uCDE8\\uC18C\",\n      children: /*#__PURE__*/_jsxDEV(Checkbox.Group, {\n        style: {\n          width: '100%'\n        },\n        onChange: onChangeCheck,\n        options: plainOptions,\n        value: checkedList,\n        children: /*#__PURE__*/_jsxDEV(List, {\n          style: {\n            width: '100%'\n          },\n          size: \"small\",\n          dataSource: me.Actions,\n          renderItem: function renderItem(item) {\n            return /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n                onChange: onCheckAllChange,\n                indeterminate: indeterminate,\n                checked: checkAll\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 17\n              }, _this), /*#__PURE__*/_jsxDEV(List.Item, {\n                children: [/*#__PURE__*/_jsxDEV(List.Item.Meta, {\n                  title: item.title,\n                  description: item.description\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 74,\n                  columnNumber: 19\n                }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: item.score\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 78,\n                  columnNumber: 19\n                }, _this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 17\n              }, _this)]\n            }, void 0, true);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true);\n};\n\n_s(ScoreAddForm, \"9jfpIrqsUsYtxy+uVmZuXDmHJfo=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = ScoreAddForm;\nexport default ScoreAddForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ScoreAddForm\");","map":{"version":3,"sources":["/Users/sean/Projects/dayscore/front/components/ScoreAddForm.js"],"names":["React","useEffect","useRef","useState","Modal","Button","List","Checkbox","useDispatch","useSelector","ADD_SCORES_TO_ME","ScoreAddForm","dispatch","visible","setVisible","indeterminate","setIndeterminate","checkAll","setCheckAll","defaultCheckedList","checkedList","setCheckedList","state","user","me","showModal","handleOk","e","Error","handleCancel","onCheckAllChange","target","checked","plainOptions","onChangeCheck","list","length","width","margin","marginLeft","marginRight","Actions","item","title","description","score"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport { Modal, Button, List, Checkbox } from 'antd';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { ADD_SCORES_TO_ME } from '../reducers/user';\n\nconst ScoreAddForm = () => {\n  const dispatch = useDispatch();\n  const [visible, setVisible] = useState(false);\n  const [indeterminate, setIndeterminate] = useState(true);\n  const [checkAll, setCheckAll] = useState(false);\n  const [checkedList, setCheckedList] = useState(defaultCheckedList);\n  const { me } = useSelector((state) => state.user);\n\n  // useEffect(() => {\n  //   me.Actions.map((item) => plainOptions.push(item.id));\n  //   console.log(plainOptions);\n  // }, []);\n\n  const showModal = () => {\n    setVisible(true);\n  };\n\n  const handleOk = () => {\n    // console.log(values);\n    try {\n      // dispatch({\n      //   type: ADD_SCORES_TO_ME,\n      //   data: values,\n      // });\n      setVisible(false);\n    } catch (e) {\n      throw new Error(e);\n    }\n  };\n\n  const handleCancel = () => {\n    setVisible(false);\n  };\n\n  const onCheckAllChange = (e) => {\n    setCheckedList(e.target.checked ? plainOptions : []);\n    setIndeterminate(false);\n    setCheckAll(e.target.checked);\n  };\n\n  const onChangeCheck = (list) => {\n    setCheckedList(list);\n    setIndeterminate(!!list.length && list.length < plainOptions.length);\n    setCheckAll(list.length === plainOptions.length);\n  };\n\n  return (\n    <>\n      <Button type=\"primary\" onClick={showModal} style={{ width: '94%', margin: '0 auto', marginLeft: 10, marginRight: 10 }}>\n        오늘의 활동 액션\n      </Button>\n      <Modal\n        title=\"오늘의 활동 액션 등록하기\"\n        visible={visible}\n        onOk={handleOk}\n        onCancel={handleCancel}\n        okText=\"등록\"\n        cancelText=\"취소\"\n      >\n        <Checkbox.Group style={{ width: '100%' }} onChange={onChangeCheck} options={plainOptions} value={checkedList}>\n          <List\n            style={{ width: '100%' }}\n            size=\"small\"\n            dataSource={me.Actions}\n            renderItem={(item) => (\n              <>\n                <Checkbox onChange={onCheckAllChange} indeterminate={indeterminate} checked={checkAll} />\n                <List.Item>\n                  <List.Item.Meta\n                    title={item.title}\n                    description={item.description}\n                  />\n                  <div>{item.score}</div>\n                </List.Item>\n              </>\n            )}\n          />\n        </Checkbox.Group>\n      </Modal>\n    </>\n  );\n};\n\nexport default ScoreAddForm;\n"]},"metadata":{},"sourceType":"module"}