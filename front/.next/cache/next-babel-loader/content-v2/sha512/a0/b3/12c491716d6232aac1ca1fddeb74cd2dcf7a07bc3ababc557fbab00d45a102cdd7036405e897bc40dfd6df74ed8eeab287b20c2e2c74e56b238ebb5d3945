{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/sean/Projects/dayscore/front/pages/index.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport AppLayout from '../components/AppLayout';\nimport { useDispatch, useSelector } from 'react-redux';\nimport PostForm from '../components/PostForm';\nimport PostCard from '../components/PostCard';\nimport { LOAD_POSTS_REQUEST } from '../reducers/post';\n\nvar Home = function Home() {\n  _s();\n\n  var _useSelector = useSelector(function (state) {\n    return state.user;\n  }),\n      me = _useSelector.me;\n\n  var _useSelector2 = useSelector(function (state) {\n    return state.post;\n  }),\n      mainPosts = _useSelector2.mainPosts,\n      hasMorePost = _useSelector2.hasMorePost,\n      loadPostsLoading = _useSelector2.loadPostsLoading; // const { isLoggedIn } = useSelector(state => state.user);\n  // const { mainPosts } = useSelector(state => state.post);\n\n\n  var dispatch = useDispatch();\n  useEffect(function () {\n    dispatch({\n      type: LOAD_POSTS_REQUEST\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(AppLayout, {\n    children: [me && /*#__PURE__*/_jsxDEV(PostForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 20\n    }, _this), mainPosts.map(function (c) {\n      return /*#__PURE__*/_jsxDEV(PostCard, {\n        post: c\n      }, c.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 21\n      }, _this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(Home, \"iD+YZkI1x21gitVFgrpkfnUYXT4=\", false, function () {\n  return [useSelector, useSelector, useDispatch];\n});\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/Users/sean/Projects/dayscore/front/pages/index.js"],"names":["React","useEffect","AppLayout","useDispatch","useSelector","PostForm","PostCard","LOAD_POSTS_REQUEST","Home","state","user","me","post","mainPosts","hasMorePost","loadPostsLoading","dispatch","type","map","c","id"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,SAAQC,WAAR,EAAqBC,WAArB,QAAuC,aAAvC;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,SAASC,kBAAT,QAAmC,kBAAnC;;AAEA,IAAMC,IAAI,GAAG,SAAPA,IAAO,GAAM;AAAA;;AAAA,qBACAJ,WAAW,CAAC,UAACK,KAAD;AAAA,WAAWA,KAAK,CAACC,IAAjB;AAAA,GAAD,CADX;AAAA,MACPC,EADO,gBACPA,EADO;;AAAA,sBAEsCP,WAAW,CAAC,UAACK,KAAD;AAAA,WAAWA,KAAK,CAACG,IAAjB;AAAA,GAAD,CAFjD;AAAA,MAEPC,SAFO,iBAEPA,SAFO;AAAA,MAEIC,WAFJ,iBAEIA,WAFJ;AAAA,MAEiBC,gBAFjB,iBAEiBA,gBAFjB,EAGf;AACA;;;AACA,MAAMC,QAAQ,GAAGb,WAAW,EAA5B;AAEAF,EAAAA,SAAS,CAAC,YAAM;AACZe,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAAEV;AADD,KAAD,CAAR;AAGH,GAJQ,EAIN,EAJM,CAAT;AAMA,sBACI,QAAC,SAAD;AAAA,eACKI,EAAE,iBAAI,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,aADX,EAEKE,SAAS,CAACK,GAAV,CAAc,UAACC,CAAD,EAAO;AAClB,0BACI,QAAC,QAAD;AAAqB,QAAA,IAAI,EAAEA;AAA3B,SAAeA,CAAC,CAACC,EAAjB;AAAA;AAAA;AAAA;AAAA,eADJ;AAGH,KAJA,CAFL;AAAA;AAAA;AAAA;AAAA;AAAA,WADJ;AAUH,CAvBD;;GAAMZ,I;UACaJ,W,EACsCA,W,EAGpCD,W;;;KALfK,I;AAyBN,eAAeA,IAAf","sourcesContent":["import React, {useEffect} from 'react';\nimport AppLayout from '../components/AppLayout';\nimport {useDispatch, useSelector} from 'react-redux';\nimport PostForm from '../components/PostForm';\nimport PostCard from '../components/PostCard';\nimport { LOAD_POSTS_REQUEST } from '../reducers/post';\n\nconst Home = () => {\n    const { me } = useSelector((state) => state.user);\n    const { mainPosts, hasMorePost, loadPostsLoading } = useSelector((state) => state.post);\n    // const { isLoggedIn } = useSelector(state => state.user);\n    // const { mainPosts } = useSelector(state => state.post);\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        dispatch({\n            type: LOAD_POSTS_REQUEST,\n        });\n    }, []);\n\n    return (\n        <AppLayout>\n            {me && <PostForm />}\n            {mainPosts.map((c) => {\n                return (\n                    <PostCard key={c.id} post={c} />\n                );\n            })}\n        </AppLayout>\n    );\n};\n\nexport default Home;"]},"metadata":{},"sourceType":"module"}