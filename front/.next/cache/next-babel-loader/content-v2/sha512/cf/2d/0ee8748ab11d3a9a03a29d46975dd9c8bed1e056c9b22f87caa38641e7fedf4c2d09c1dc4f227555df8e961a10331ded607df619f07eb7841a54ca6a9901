{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/sean/Projects/dayscore/front/components/FollowButton.js\";\nimport React, { useCallback, useEffect } from 'react';\nimport { Button } from 'antd';\nimport { useDispatch, useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport Router from 'next/router';\nimport { FOLLOW_REQUEST, UNFOLLOW_REQUEST } from '../reducers/user';\n\nconst FollowButton = ({\n  post\n}) => {\n  var _post$User;\n\n  const dispatch = useDispatch();\n  const {\n    me,\n    followLoading,\n    unfollowLoading\n  } = useSelector(state => state.user);\n  const isFollowing = me === null || me === void 0 ? void 0 : me.Followings.find(v => v.id === post.User.id);\n  useEffect(() => {\n    if (!me) {\n      alert('로그인 상태입니다. 메인 페이지로 이동합니다.');\n      Router.push('/');\n    }\n  }, [me && me.id]);\n  const onClickButton = useCallback(() => {\n    if (isFollowing) {\n      dispatch({\n        type: UNFOLLOW_REQUEST,\n        data: post.User.id\n      });\n    } else {\n      dispatch({\n        type: FOLLOW_REQUEST,\n        data: post.User.id\n      });\n    }\n  }, [isFollowing]);\n\n  if (((_post$User = post.User) === null || _post$User === void 0 ? void 0 : _post$User.id) === (me === null || me === void 0 ? void 0 : me.id)) {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsxDEV(Button, {\n    loading: followLoading || unfollowLoading,\n    onClick: onClickButton,\n    children: isFollowing ? '언팔로우' : '팔로우'\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n\nFollowButton.propTypes = {\n  post: PropTypes.object.isRequired\n};\nexport default FollowButton;","map":{"version":3,"sources":["/Users/sean/Projects/dayscore/front/components/FollowButton.js"],"names":["React","useCallback","useEffect","Button","useDispatch","useSelector","PropTypes","Router","FOLLOW_REQUEST","UNFOLLOW_REQUEST","FollowButton","post","dispatch","me","followLoading","unfollowLoading","state","user","isFollowing","Followings","find","v","id","User","alert","push","onClickButton","type","data","propTypes","object","isRequired"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,WAAhB,EAA6BC,SAA7B,QAA8C,OAA9C;AACA,SAASC,MAAT,QAAuB,MAAvB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,SAASC,cAAT,EAAyBC,gBAAzB,QAAiD,kBAAjD;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAc;AAAA;;AACjC,QAAMC,QAAQ,GAAGR,WAAW,EAA5B;AACA,QAAM;AAAES,IAAAA,EAAF;AAAMC,IAAAA,aAAN;AAAqBC,IAAAA;AAArB,MAAyCV,WAAW,CAAEW,KAAD,IAAWA,KAAK,CAACC,IAAlB,CAA1D;AACA,QAAMC,WAAW,GAAGL,EAAH,aAAGA,EAAH,uBAAGA,EAAE,CAAEM,UAAJ,CAAeC,IAAf,CAAqBC,CAAD,IAAOA,CAAC,CAACC,EAAF,KAASX,IAAI,CAACY,IAAL,CAAUD,EAA9C,CAApB;AAEApB,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI,CAACW,EAAL,EAAS;AACPW,MAAAA,KAAK,CAAC,2BAAD,CAAL;AACAjB,MAAAA,MAAM,CAACkB,IAAP,CAAY,GAAZ;AACD;AACF,GALQ,EAKN,CAACZ,EAAE,IAAIA,EAAE,CAACS,EAAV,CALM,CAAT;AAOA,QAAMI,aAAa,GAAGzB,WAAW,CAAC,MAAM;AACtC,QAAIiB,WAAJ,EAAiB;AACfN,MAAAA,QAAQ,CAAC;AACPe,QAAAA,IAAI,EAAElB,gBADC;AAEPmB,QAAAA,IAAI,EAAEjB,IAAI,CAACY,IAAL,CAAUD;AAFT,OAAD,CAAR;AAID,KALD,MAKO;AACLV,MAAAA,QAAQ,CAAC;AACPe,QAAAA,IAAI,EAAEnB,cADC;AAEPoB,QAAAA,IAAI,EAAEjB,IAAI,CAACY,IAAL,CAAUD;AAFT,OAAD,CAAR;AAID;AACF,GAZgC,EAY9B,CAACJ,WAAD,CAZ8B,CAAjC;;AAcA,MAAI,eAAAP,IAAI,CAACY,IAAL,0DAAWD,EAAX,OAAkBT,EAAlB,aAAkBA,EAAlB,uBAAkBA,EAAE,CAAES,EAAtB,CAAJ,EAA8B;AAC5B,WAAO,IAAP;AACD;;AAED,sBACE,QAAC,MAAD;AAAQ,IAAA,OAAO,EAAER,aAAa,IAAIC,eAAlC;AAAmD,IAAA,OAAO,EAAEW,aAA5D;AAAA,cACGR,WAAW,GAAG,MAAH,GAAY;AAD1B;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAnCD;;AAqCAR,YAAY,CAACmB,SAAb,GAAyB;AACvBlB,EAAAA,IAAI,EAAEL,SAAS,CAACwB,MAAV,CAAiBC;AADA,CAAzB;AAIA,eAAerB,YAAf","sourcesContent":["import React, { useCallback, useEffect } from 'react';\nimport { Button } from 'antd';\nimport { useDispatch, useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport Router from 'next/router';\nimport { FOLLOW_REQUEST, UNFOLLOW_REQUEST } from '../reducers/user';\n\nconst FollowButton = ({ post }) => {\n  const dispatch = useDispatch();\n  const { me, followLoading, unfollowLoading } = useSelector((state) => state.user);\n  const isFollowing = me?.Followings.find((v) => v.id === post.User.id);\n\n  useEffect(() => {\n    if (!me) {\n      alert('로그인 상태입니다. 메인 페이지로 이동합니다.');\n      Router.push('/');\n    }\n  }, [me && me.id]);\n\n  const onClickButton = useCallback(() => {\n    if (isFollowing) {\n      dispatch({\n        type: UNFOLLOW_REQUEST,\n        data: post.User.id,\n      });\n    } else {\n      dispatch({\n        type: FOLLOW_REQUEST,\n        data: post.User.id,\n      });\n    }\n  }, [isFollowing]);\n\n  if (post.User?.id === me?.id) {\n    return null;\n  }\n\n  return (\n    <Button loading={followLoading || unfollowLoading} onClick={onClickButton}>\n      {isFollowing ? '언팔로우' : '팔로우'}\n    </Button>\n  );\n};\n\nFollowButton.propTypes = {\n  post: PropTypes.object.isRequired,\n};\n\nexport default FollowButton;\n"]},"metadata":{},"sourceType":"module"}