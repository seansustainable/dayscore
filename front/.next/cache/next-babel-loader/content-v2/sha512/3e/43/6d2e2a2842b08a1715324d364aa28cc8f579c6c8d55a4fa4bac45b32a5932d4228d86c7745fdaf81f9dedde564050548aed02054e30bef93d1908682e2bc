{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/sean/Projects/dayscore/front/pages/index.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport AppLayout from '../components/AppLayout';\nimport PostForm from '../components/PostForm';\nimport PostCard from '../components/PostCard';\nimport { LOAD_POSTS_REQUEST } from '../reducers/post';\nimport { LOAD_USER_REQUEST } from '../reducers/user';\n\nvar Home = function Home() {\n  _s();\n\n  var _useSelector = useSelector(function (state) {\n    return state.user;\n  }),\n      me = _useSelector.me; // eslint-disable-next-line max-len\n\n\n  var _useSelector2 = useSelector(function (state) {\n    return state.post;\n  }),\n      mainPosts = _useSelector2.mainPosts,\n      hasMorePosts = _useSelector2.hasMorePosts,\n      loadPostsLoading = _useSelector2.loadPostsLoading,\n      retweetError = _useSelector2.retweetError; // const { isLoggedIn } = useSelector(state => state.user);\n  // const { mainPosts } = useSelector(state => state.post);\n\n\n  var dispatch = useDispatch();\n  useEffect(function () {\n    dispatch({\n      type: LOAD_USER_REQUEST\n    });\n    dispatch({\n      type: LOAD_POSTS_REQUEST\n    });\n  }, []);\n  useEffect(function () {\n    if (retweetError) {\n      alert(retweetError);\n    }\n  }, [retweetError]);\n  useEffect(function () {\n    function onScroll() {\n      // eslint-disable-next-line max-len\n      if (window.pageYOffset + document.documentElement.clientHeight > document.documentElement.scrollHeight - 300) {\n        if (!loadPostsLoading && hasMorePosts) {\n          var _mainPosts;\n\n          var lastId = (_mainPosts = mainPosts[mainPosts.length - 1]) === null || _mainPosts === void 0 ? void 0 : _mainPosts.id;\n          dispatch({\n            type: LOAD_POSTS_REQUEST,\n            lastId: lastId\n          });\n        }\n      }\n    }\n\n    window.addEventListener('scroll', onScroll);\n    return function () {\n      window.removeEventListener('scroll', onScroll);\n    };\n  }, [mainPosts, loadPostsLoading, hasMorePosts]);\n  return /*#__PURE__*/_jsxDEV(AppLayout, {\n    children: [me && /*#__PURE__*/_jsxDEV(PostForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 14\n    }, _this), mainPosts.map(function (c) {\n      return /*#__PURE__*/_jsxDEV(PostCard, {\n        post: c\n      }, c.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, _this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(Home, \"RoExE+/yfgw5cJidFLvUgAEZJE8=\", false, function () {\n  return [useSelector, useSelector, useDispatch];\n});\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/Users/sean/Projects/dayscore/front/pages/index.js"],"names":["React","useEffect","useDispatch","useSelector","AppLayout","PostForm","PostCard","LOAD_POSTS_REQUEST","LOAD_USER_REQUEST","Home","state","user","me","post","mainPosts","hasMorePosts","loadPostsLoading","retweetError","dispatch","type","alert","onScroll","window","pageYOffset","document","documentElement","clientHeight","scrollHeight","lastId","length","id","addEventListener","removeEventListener","map","c"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,SAASC,kBAAT,QAAmC,kBAAnC;AACA,SAASC,iBAAT,QAAkC,kBAAlC;;AAEA,IAAMC,IAAI,GAAG,SAAPA,IAAO,GAAM;AAAA;;AAAA,qBACFN,WAAW,CAAC,UAACO,KAAD;AAAA,WAAWA,KAAK,CAACC,IAAjB;AAAA,GAAD,CADT;AAAA,MACTC,EADS,gBACTA,EADS,EAEjB;;;AAFiB,sBAGmDT,WAAW,CAAC,UAACO,KAAD;AAAA,WAAWA,KAAK,CAACG,IAAjB;AAAA,GAAD,CAH9D;AAAA,MAGTC,SAHS,iBAGTA,SAHS;AAAA,MAGEC,YAHF,iBAGEA,YAHF;AAAA,MAGgBC,gBAHhB,iBAGgBA,gBAHhB;AAAA,MAGkCC,YAHlC,iBAGkCA,YAHlC,EAIjB;AACA;;;AACA,MAAMC,QAAQ,GAAGhB,WAAW,EAA5B;AAEAD,EAAAA,SAAS,CAAC,YAAM;AACdiB,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEX;AADC,KAAD,CAAR;AAGAU,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEZ;AADC,KAAD,CAAR;AAGD,GAPQ,EAON,EAPM,CAAT;AASAN,EAAAA,SAAS,CAAC,YAAM;AACd,QAAIgB,YAAJ,EAAkB;AAChBG,MAAAA,KAAK,CAACH,YAAD,CAAL;AACD;AACF,GAJQ,EAIN,CAACA,YAAD,CAJM,CAAT;AAMAhB,EAAAA,SAAS,CAAC,YAAM;AACd,aAASoB,QAAT,GAAoB;AAClB;AACA,UAAIC,MAAM,CAACC,WAAP,GAAqBC,QAAQ,CAACC,eAAT,CAAyBC,YAA9C,GAA6DF,QAAQ,CAACC,eAAT,CAAyBE,YAAzB,GAAwC,GAAzG,EAA8G;AAC5G,YAAI,CAACX,gBAAD,IAAqBD,YAAzB,EAAuC;AAAA;;AACrC,cAAMa,MAAM,iBAAGd,SAAS,CAACA,SAAS,CAACe,MAAV,GAAmB,CAApB,CAAZ,+CAAG,WAAiCC,EAAhD;AACAZ,UAAAA,QAAQ,CAAC;AACPC,YAAAA,IAAI,EAAEZ,kBADC;AAEPqB,YAAAA,MAAM,EAANA;AAFO,WAAD,CAAR;AAID;AACF;AACF;;AACDN,IAAAA,MAAM,CAACS,gBAAP,CAAwB,QAAxB,EAAkCV,QAAlC;AACA,WAAO,YAAM;AACXC,MAAAA,MAAM,CAACU,mBAAP,CAA2B,QAA3B,EAAqCX,QAArC;AACD,KAFD;AAGD,GAjBQ,EAiBN,CAACP,SAAD,EAAYE,gBAAZ,EAA8BD,YAA9B,CAjBM,CAAT;AAmBA,sBACE,QAAC,SAAD;AAAA,eACGH,EAAE,iBAAI,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,aADT,EAEGE,SAAS,CAACmB,GAAV,CAAc,UAACC,CAAD;AAAA,0BACb,QAAC,QAAD;AAAqB,QAAA,IAAI,EAAEA;AAA3B,SAAeA,CAAC,CAACJ,EAAjB;AAAA;AAAA;AAAA;AAAA,eADa;AAAA,KAAd,CAFH;AAAA;AAAA;AAAA;AAAA;AAAA,WADF;AAQD,CAlDD;;GAAMrB,I;UACWN,W,EAEqDA,W,EAGnDD,W;;;KANbO,I;AAoDN,eAAeA,IAAf","sourcesContent":["import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport AppLayout from '../components/AppLayout';\nimport PostForm from '../components/PostForm';\nimport PostCard from '../components/PostCard';\nimport { LOAD_POSTS_REQUEST } from '../reducers/post';\nimport { LOAD_USER_REQUEST } from '../reducers/user';\n\nconst Home = () => {\n  const { me } = useSelector((state) => state.user);\n  // eslint-disable-next-line max-len\n  const { mainPosts, hasMorePosts, loadPostsLoading, retweetError } = useSelector((state) => state.post);\n  // const { isLoggedIn } = useSelector(state => state.user);\n  // const { mainPosts } = useSelector(state => state.post);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch({\n      type: LOAD_USER_REQUEST,\n    });\n    dispatch({\n      type: LOAD_POSTS_REQUEST,\n    });\n  }, []);\n\n  useEffect(() => {\n    if (retweetError) {\n      alert(retweetError);\n    }\n  }, [retweetError]);\n\n  useEffect(() => {\n    function onScroll() {\n      // eslint-disable-next-line max-len\n      if (window.pageYOffset + document.documentElement.clientHeight > document.documentElement.scrollHeight - 300) {\n        if (!loadPostsLoading && hasMorePosts) {\n          const lastId = mainPosts[mainPosts.length - 1]?.id;\n          dispatch({\n            type: LOAD_POSTS_REQUEST,\n            lastId,\n          });\n        }\n      }\n    }\n    window.addEventListener('scroll', onScroll);\n    return () => {\n      window.removeEventListener('scroll', onScroll);\n    };\n  }, [mainPosts, loadPostsLoading, hasMorePosts]);\n\n  return (\n    <AppLayout>\n      {me && <PostForm />}\n      {mainPosts.map((c) => (\n        <PostCard key={c.id} post={c} />\n      ))}\n    </AppLayout>\n  );\n};\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}